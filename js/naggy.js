(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by psc version 0.6.9.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function showStringImpl(s) {
      return JSON.stringify(s);
    }
    ;
    
    function showNumberImpl(n) {
      return n.toString();
    }
    ;
    
    function showArrayImpl(f) {
      return function(xs) {
        var ss = [];
        for (var i = 0, l = xs.length; i < l; i++) {
          ss[i] = f(xs[i]);
        }
        return '[' + ss.join(',') + ']';
      };
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    
    function concatString(s1) {
      return function(s2) {
        return s1 + s2;
      };
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Semiring = function ($times, $plus, one, zero) {
        this["*"] = $times;
        this["+"] = $plus;
        this.one = one;
        this.zero = zero;
    };
    var Ring = function ($minus, __superclass_Prelude$dotSemiring_0) {
        this["-"] = $minus;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showString = new Show(showStringImpl);
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_76) {
        if (_76) {
            return "true";
        };
        if (!_76) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var semiringNumber = new Semiring(numMul, numAdd, 1, 0);
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var ringNumber = new Ring(numSub, function () {
        return semiringNumber;
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var not = function (dict) {
        return dict.not;
    };
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var $$const = function (a) {
        return function (_73) {
            return a;
        };
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _958 = compare(__dict_Ord_12)(a1)(a2);
                if (_958 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _959 = compare(__dict_Ord_13)(a1)(a2);
                if (_959 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _960 = compare(__dict_Ord_14)(a1)(a2);
                if (_960 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_15) {
        return function (a1) {
            return function (a2) {
                var _961 = compare(__dict_Ord_15)(a1)(a2);
                if (_961 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_4) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_3) {
                        return $$return(__dict_Monad_16)(_4(_3));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Ord: Ord, 
        Eq: Eq, 
        Ring: Ring, 
        Semiring: Semiring, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        "const": $$const, 
        flip: flip, 
        otherwise: otherwise, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        semiringNumber: semiringNumber, 
        ringNumber: ringNumber, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupString: semigroupString
    };
})();
var PS = PS || {};
PS.Type_Proxy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Proxy = (function () {
        function Proxy() {

        };
        Proxy.value = new Proxy();
        return Proxy;
    })();
    return {
        Proxy: Proxy
    };
})();
var PS = PS || {};
PS.Network_HTTP_ResponseHeader = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var ResponseHeader = (function () {
        function ResponseHeader(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ResponseHeader.create = function (value0) {
            return function (value1) {
                return new ResponseHeader(value0, value1);
            };
        };
        return ResponseHeader;
    })();
    var responseHeader = function (field) {
        return function (value) {
            return new ResponseHeader(field, value);
        };
    };
    return {
        responseHeader: responseHeader
    };
})();
var PS = PS || {};
PS.Network_HTTP_MimeType = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var MimeType = function (x) {
        return x;
    };
    var mimeTypeToString = function (_98) {
        return _98;
    };
    return {
        MimeType: MimeType, 
        mimeTypeToString: mimeTypeToString
    };
})();
var PS = PS || {};
PS.Network_HTTP_MimeType_Common = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Network_HTTP_MimeType = PS.Network_HTTP_MimeType;
    var applicationJSON = "application/json";
    return {
        applicationJSON: applicationJSON
    };
})();
var PS = PS || {};
PS.Network_HTTP_RequestHeader = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Network_HTTP_MimeType = PS.Network_HTTP_MimeType;
    var Accept = (function () {
        function Accept(value0) {
            this.value0 = value0;
        };
        Accept.create = function (value0) {
            return new Accept(value0);
        };
        return Accept;
    })();
    var ContentType = (function () {
        function ContentType(value0) {
            this.value0 = value0;
        };
        ContentType.create = function (value0) {
            return new ContentType(value0);
        };
        return ContentType;
    })();
    var RequestHeader = (function () {
        function RequestHeader(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        RequestHeader.create = function (value0) {
            return function (value1) {
                return new RequestHeader(value0, value1);
            };
        };
        return RequestHeader;
    })();
    var requestHeaderValue = function (_105) {
        if (_105 instanceof Accept) {
            return Network_HTTP_MimeType.mimeTypeToString(_105.value0);
        };
        if (_105 instanceof ContentType) {
            return Network_HTTP_MimeType.mimeTypeToString(_105.value0);
        };
        if (_105 instanceof RequestHeader) {
            return _105.value1;
        };
        throw new Error("Failed pattern match");
    };
    var requestHeaderName = function (_104) {
        if (_104 instanceof Accept) {
            return "Accept";
        };
        if (_104 instanceof ContentType) {
            return "Content-Type";
        };
        if (_104 instanceof RequestHeader) {
            return _104.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        Accept: Accept, 
        ContentType: ContentType, 
        RequestHeader: RequestHeader, 
        requestHeaderValue: requestHeaderValue, 
        requestHeaderName: requestHeaderName
    };
})();
var PS = PS || {};
PS.Network_HTTP_Method = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DELETE = (function () {
        function DELETE() {

        };
        DELETE.value = new DELETE();
        return DELETE;
    })();
    var GET = (function () {
        function GET() {

        };
        GET.value = new GET();
        return GET;
    })();
    var HEAD = (function () {
        function HEAD() {

        };
        HEAD.value = new HEAD();
        return HEAD;
    })();
    var OPTIONS = (function () {
        function OPTIONS() {

        };
        OPTIONS.value = new OPTIONS();
        return OPTIONS;
    })();
    var PATCH = (function () {
        function PATCH() {

        };
        PATCH.value = new PATCH();
        return PATCH;
    })();
    var POST = (function () {
        function POST() {

        };
        POST.value = new POST();
        return POST;
    })();
    var PUT = (function () {
        function PUT() {

        };
        PUT.value = new PUT();
        return PUT;
    })();
    var MOVE = (function () {
        function MOVE() {

        };
        MOVE.value = new MOVE();
        return MOVE;
    })();
    var COPY = (function () {
        function COPY() {

        };
        COPY.value = new COPY();
        return COPY;
    })();
    var CustomMethod = (function () {
        function CustomMethod(value0) {
            this.value0 = value0;
        };
        CustomMethod.create = function (value0) {
            return new CustomMethod(value0);
        };
        return CustomMethod;
    })();
    var showMethod = new Prelude.Show(function (_111) {
        if (_111 instanceof DELETE) {
            return "DELETE";
        };
        if (_111 instanceof GET) {
            return "GET";
        };
        if (_111 instanceof HEAD) {
            return "HEAD";
        };
        if (_111 instanceof OPTIONS) {
            return "OPTIONS";
        };
        if (_111 instanceof PATCH) {
            return "PATCH";
        };
        if (_111 instanceof POST) {
            return "POST";
        };
        if (_111 instanceof PUT) {
            return "PUT";
        };
        if (_111 instanceof MOVE) {
            return "MOVE";
        };
        if (_111 instanceof COPY) {
            return "COPY";
        };
        if (_111 instanceof CustomMethod) {
            return "(CustomMethod " + (Prelude.show(Prelude.showString)(_111.value0) + ")");
        };
        throw new Error("Failed pattern match");
    });
    var methodToString = function (other) {
        if (other instanceof CustomMethod) {
            return other.value0;
        };
        return Prelude.show(showMethod)(other);
    };
    return {
        DELETE: DELETE, 
        GET: GET, 
        HEAD: HEAD, 
        OPTIONS: OPTIONS, 
        PATCH: PATCH, 
        POST: POST, 
        PUT: PUT, 
        MOVE: MOVE, 
        COPY: COPY, 
        CustomMethod: CustomMethod, 
        methodToString: methodToString, 
        showMethod: showMethod
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Profunctor = function (dimap) {
        this.dimap = dimap;
    };
    var dimap = function (dict) {
        return dict.dimap;
    };
    return {
        Profunctor: Profunctor, 
        dimap: dimap
    };
})();
var PS = PS || {};
PS.Data_Int = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function fromNumber(n) {
    return n|0;
  }
  ;
    var Int = function (x) {
        return x;
    };
    var toNumber = function (_112) {
        return _112;
    };
    return {
        toNumber: toNumber, 
        fromNumber: fromNumber
    };
})();
var PS = PS || {};
PS.Data_Time = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Int = PS.Data_Int;
    var MinuteOfHour = function (x) {
        return x;
    };
    var HourOfDay = function (x) {
        return x;
    };
    return {
        MinuteOfHour: MinuteOfHour, 
        HourOfDay: HourOfDay
    };
})();
var PS = PS || {};
PS.Data_Void = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Functor_Contravariant = PS.Data_Functor_Contravariant;
    var Void = function (x) {
        return x;
    };
    var absurd = function (a) {
        var spin = function (__copy__241) {
            var _241 = __copy__241;
            tco: while (true) {
                var __tco__241 = _241;
                _241 = __tco__241;
                continue tco;
            };
        };
        return spin(a);
    };
    return {
        Void: Void, 
        absurd: absurd
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function runFn2(fn) {
      return function(a) {
        return function(b) {
          return fn(a, b);
        };
      };
    }
    ;
    
    function runFn3(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return fn(a, b, c);
          };
        };
      };
    }
    ;
    
    function runFn4(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return fn(a, b, c, d);
            };
          };
        };
      };
    }
    ;
    
    function runFn5(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return fn(a, b, c, d, e);
              };
            };
          };
        };
      };
    }
    ;
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Exists = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkExists(fa) {  return fa;};
    function runExists(f) {  return function(fa) {    return f(fa);  };};
    return {
        runExists: runExists, 
        mkExists: mkExists
    };
})();
var PS = PS || {};
PS.Network_HTTP_Affjax_Request = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var DOM_File = PS.DOM_File;
    var DOM_XHR = PS.DOM_XHR;
    var Data_ArrayBuffer_Types = PS.Data_ArrayBuffer_Types;
    
  function unsafeConversion (x) {
    return x;
  }
  ;
    var Requestable = function (toRequest) {
        this.toRequest = toRequest;
    };
    var toRequest = function (dict) {
        return dict.toRequest;
    };
    var requestableUnit = new Requestable(unsafeConversion);
    var requestableString = new Requestable(unsafeConversion);
    return {
        Requestable: Requestable, 
        toRequest: toRequest, 
        requestableString: requestableString, 
        requestableUnit: requestableUnit
    };
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var MonadTrans = function (lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    
    function runPure(f) {
      return f();
    }
    ;
    
    function untilE(f) {
      return function() {
        while (!f());
        return {};
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        untilE: untilE, 
        runPure: runPure, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Exception = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function showErrorImpl(err) {
    return err.stack || err.toString();
  }
  ;
    
  function error(msg) {
    return new Error(msg);
  }
  ;
    
  function message(e) {
    return e.message;
  }
  ;
    var showError = new Prelude.Show(showErrorImpl);
    return {
        message: message, 
        error: error, 
        showError: showError
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Ref = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function newRef(val) {
    return function () {
      return { value: val };
    };
  }
;
    
  function readRef(ref) {
    return function() {
      return ref.value;
    };
  }
;
    
  function writeRef(ref) {
    return function(val) {
      return function() {
        ref.value = val;
        return {};
      };
    };
  }
;
    return {
        writeRef: writeRef, 
        readRef: readRef, 
        newRef: newRef
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function unsafeInterleaveEff(f) {
      return f;
    }
    ;
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    
    function newSTRef(val) {
      return function() {
        return { value: val };
      };
    }
    ;
    
    function readSTRef(ref) {
      return function() {
        return ref.value;
      };
    }
    ;
    
    function writeSTRef(ref) {
      return function(a) {
        return function() {
          return ref.value = a;
        };
      };
    }
    ;
    return {
        writeSTRef: writeSTRef, 
        readSTRef: readSTRef, 
        newSTRef: newSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function trace(s) {
      return function() {
        console.log(s);
        return {};
      };
    }
    ;
    return {
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Functor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$dollar = function (__dict_Functor_41) {
        return function (x) {
            return function (f) {
                return Prelude["<$>"](__dict_Functor_41)(Prelude["const"](x))(f);
            };
        };
    };
    var $dollar$greater = function (__dict_Functor_42) {
        return function (f) {
            return function (x) {
                return Prelude["<$>"](__dict_Functor_42)(Prelude["const"](x))(f);
            };
        };
    };
    return {
        "$>": $dollar$greater, 
        "<$": $less$dollar
    };
})();
var PS = PS || {};
PS.Data_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function defer(thunk) {    if (this instanceof defer) {      this.thunk = thunk;      return this;    } else {      return new defer(thunk);    }}defer.prototype.force = function () {    var value = this.thunk();    delete this.thunk;    this.force = function () {        return value;    };    return value;};;
    function force(l) {  return l.force();};
    var functorLazy = new Prelude.Functor(function (f) {
        return function (l) {
            return defer(function (_257) {
                return f(force(l));
            });
        };
    });
    return {
        force: force, 
        defer: defer, 
        functorLazy: functorLazy
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $times$greater = function (__dict_Apply_58) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_58)(Prelude["<$>"](__dict_Apply_58["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    return {
        "*>": $times$greater
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    return {
        Alternative: Alternative
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Extend = PS.Control_Extend;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var functorEither = new Prelude.Functor(function (f) {
        return function (_268) {
            if (_268 instanceof Left) {
                return new Left(_268.value0);
            };
            if (_268 instanceof Right) {
                return new Right(f(_268.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var either = function (f) {
        return function (g) {
            return function (_267) {
                if (_267 instanceof Left) {
                    return f(_267.value0);
                };
                if (_267 instanceof Right) {
                    return g(_267.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var applyEither = new Prelude.Apply(function (_269) {
        return function (r) {
            if (_269 instanceof Left) {
                return new Left(_269.value0);
            };
            if (_269 instanceof Right) {
                return Prelude["<$>"](functorEither)(_269.value0)(r);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_266) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        bindEither: bindEither, 
        monadEither: monadEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var maybe = function (b) {
        return function (f) {
            return function (_282) {
                if (_282 instanceof Nothing) {
                    return b;
                };
                if (_282 instanceof Just) {
                    return f(_282.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (fn) {
        return function (_283) {
            if (_283 instanceof Just) {
                return new Just(fn(_283.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var applyMaybe = new Prelude.Apply(function (_284) {
        return function (x) {
            if (_284 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_284.value0)(x);
            };
            if (_284 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_285) {
        return function (k) {
            if (_285 instanceof Just) {
                return k(_285.value0);
            };
            if (_285 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        isJust: isJust, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        bindMaybe: bindMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var functorArray = new Prelude.Functor(map);
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    return {
        filter: filter, 
        concatMap: concatMap, 
        append: append, 
        map: map, 
        singleton: singleton, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Array = PS.Data_Array;
    var Data_Either = PS.Data_Either;
    
  function toForeign(value) {
    return value;
  }
  ;
    
  function unsafeFromForeign(value) {
    return value;
  }
  ;
    
  function typeOf(value) {
    return typeof value;
  }
  ;
    
  function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  }
  ;
    
  function isNull(value) {
    return value === null;
  }
  ;
    
  function isUndefined(value) {
    return value === undefined;
  }
  ;
    var TypeMismatch = (function () {
        function TypeMismatch(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        TypeMismatch.create = function (value0) {
            return function (value1) {
                return new TypeMismatch(value0, value1);
            };
        };
        return TypeMismatch;
    })();
    var ErrorAtIndex = (function () {
        function ErrorAtIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtIndex.create = function (value0) {
            return function (value1) {
                return new ErrorAtIndex(value0, value1);
            };
        };
        return ErrorAtIndex;
    })();
    var ErrorAtProperty = (function () {
        function ErrorAtProperty(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ErrorAtProperty.create = function (value0) {
            return function (value1) {
                return new ErrorAtProperty(value0, value1);
            };
        };
        return ErrorAtProperty;
    })();
    var JSONError = (function () {
        function JSONError(value0) {
            this.value0 = value0;
        };
        JSONError.create = function (value0) {
            return new JSONError(value0);
        };
        return JSONError;
    })();
    var unsafeReadTagged = function (tag) {
        return function (value) {
            if (tagOf(value) === tag) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(value));
            };
            return new Data_Either.Left(new TypeMismatch(tag, tagOf(value)));
        };
    };
    var showForeignError = new Prelude.Show(function (_296) {
        if (_296 instanceof TypeMismatch) {
            return "Type mismatch: expected " + (_296.value0 + (", found " + _296.value1));
        };
        if (_296 instanceof ErrorAtIndex) {
            return "Error at array index " + (Prelude.show(Prelude.showNumber)(_296.value0) + (": " + Prelude.show(showForeignError)(_296.value1)));
        };
        if (_296 instanceof ErrorAtProperty) {
            return "Error at property " + (Prelude.show(Prelude.showString)(_296.value0) + (": " + Prelude.show(showForeignError)(_296.value1)));
        };
        if (_296 instanceof JSONError) {
            return "JSON error: " + _296.value0;
        };
        throw new Error("Failed pattern match");
    });
    var readString = unsafeReadTagged("String");
    var readBoolean = unsafeReadTagged("Boolean");
    return {
        TypeMismatch: TypeMismatch, 
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        readBoolean: readBoolean, 
        readString: readString, 
        isUndefined: isUndefined, 
        isNull: isNull, 
        tagOf: tagOf, 
        typeOf: typeOf, 
        unsafeReadTagged: unsafeReadTagged, 
        unsafeFromForeign: unsafeFromForeign, 
        toForeign: toForeign, 
        showForeignError: showForeignError
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    
  function unsafeReadPropImpl(f, s, key, value) {
    return value == null ? f : s(value[key]);
  }
  ;
    
  function unsafeHasOwnProperty(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  }
  ;
    
  function unsafeHasProperty(prop, value) {
    return prop in value;
  }
  ;
    var Index = function ($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
        };
    };
    var prop = unsafeReadProp;
    var hasPropertyImpl = function (prop_1) {
        return function (value) {
            if (Data_Foreign.isNull(value)) {
                return false;
            };
            if (Data_Foreign.isUndefined(value)) {
                return false;
            };
            if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
                return unsafeHasProperty(prop_1, value);
            };
            return false;
        };
    };
    var hasOwnPropertyImpl = function (prop_1) {
        return function (value) {
            if (Data_Foreign.isNull(value)) {
                return false;
            };
            if (Data_Foreign.isUndefined(value)) {
                return false;
            };
            if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
                return unsafeHasOwnProperty(prop_1, value);
            };
            return false;
        };
    };
    var indexString = new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        Index: Index, 
        errorAt: errorAt, 
        "!": $bang, 
        prop: prop, 
        indexString: indexString
    };
})();
var PS = PS || {};
PS.Network_HTTP_Affjax_Response = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Control_Bind = PS.Control_Bind;
    var Data_Either = PS.Data_Either;
    var DOM = PS.DOM;
    var DOM_File = PS.DOM_File;
    var DOM_XHR = PS.DOM_XHR;
    var Type_Proxy = PS.Type_Proxy;
    var Data_ArrayBuffer_Types = PS.Data_ArrayBuffer_Types;
    var ArrayBufferResponse = (function () {
        function ArrayBufferResponse() {

        };
        ArrayBufferResponse.value = new ArrayBufferResponse();
        return ArrayBufferResponse;
    })();
    var BlobResponse = (function () {
        function BlobResponse() {

        };
        BlobResponse.value = new BlobResponse();
        return BlobResponse;
    })();
    var DocumentResponse = (function () {
        function DocumentResponse() {

        };
        DocumentResponse.value = new DocumentResponse();
        return DocumentResponse;
    })();
    var JSONResponse = (function () {
        function JSONResponse() {

        };
        JSONResponse.value = new JSONResponse();
        return JSONResponse;
    })();
    var StringResponse = (function () {
        function StringResponse() {

        };
        StringResponse.value = new StringResponse();
        return StringResponse;
    })();
    var Respondable = function (fromResponse, responseType) {
        this.fromResponse = fromResponse;
        this.responseType = responseType;
    };
    var responseTypeToString = function (_299) {
        if (_299 instanceof ArrayBufferResponse) {
            return "arraybuffer";
        };
        if (_299 instanceof BlobResponse) {
            return "blob";
        };
        if (_299 instanceof DocumentResponse) {
            return "document";
        };
        if (_299 instanceof JSONResponse) {
            return "json";
        };
        if (_299 instanceof StringResponse) {
            return "text";
        };
        throw new Error("Failed pattern match");
    };
    var responseType = function (dict) {
        return dict.responseType;
    };
    var responsableUnit = new Respondable(Prelude["const"](new Data_Either.Right(Prelude.unit)), function (_307) {
        return StringResponse.value;
    });
    var responsableString = new Respondable(Data_Foreign.readString, function (_306) {
        return StringResponse.value;
    });
    var fromResponse = function (dict) {
        return dict.fromResponse;
    };
    return {
        Respondable: Respondable, 
        fromResponse: fromResponse, 
        responseType: responseType, 
        responseTypeToString: responseTypeToString, 
        responsableString: responsableString, 
        responsableUnit: responsableUnit
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function pushAllSTArrayImpl(arr, as) {
    return function(){
      return arr.push.apply(arr, as);
    };
  };
    var pushAllSTArray = Data_Function.runFn2(pushAllSTArrayImpl);
    var pushSTArray = function (arr) {
        return function (a) {
            return pushAllSTArray(arr)([ a ]);
        };
    };
    return {
        pushAllSTArray: pushAllSTArray, 
        pushSTArray: pushSTArray, 
        emptySTArray: emptySTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_311) {
        if (_311 instanceof Data_Maybe.Just) {
            return _311.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var snd = function (_402) {
        return _402.value1;
    };
    var showTuple = function (__dict_Show_136) {
        return function (__dict_Show_137) {
            return new Prelude.Show(function (_406) {
                return "Tuple (" + (Prelude.show(__dict_Show_136)(_406.value0) + (") (" + (Prelude.show(__dict_Show_137)(_406.value1) + ")")));
            });
        };
    };
    var fst = function (_401) {
        return _401.value0;
    };
    return {
        Tuple: Tuple, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = function (x) {
        return x;
    };
    var runWriterT = function (_454) {
        return _454;
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT(f(runWriterT(m)));
        };
    };
    var functorWriterT = function (__dict_Functor_253) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_253)(function (_453) {
                return new Data_Tuple.Tuple(f(_453.value0), _453.value1);
            }));
        });
    };
    var applyWriterT = function (__dict_Monoid_257) {
        return function (__dict_Apply_258) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT((function () {
                        var k = function (_455) {
                            return function (_456) {
                                return new Data_Tuple.Tuple(_455.value0(_456.value0), Prelude["<>"](__dict_Monoid_257["__superclass_Prelude.Semigroup_0"]())(_455.value1)(_456.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_258)(Prelude["<$>"](__dict_Apply_258["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_258["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_259) {
        return function (__dict_Applicative_260) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_259)(__dict_Applicative_260["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT(Prelude.pure(__dict_Applicative_260)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_259))));
            });
        };
    };
    return {
        WriterT: WriterT, 
        mapWriterT: mapWriterT, 
        runWriterT: runWriterT, 
        functorWriterT: functorWriterT, 
        applyWriterT: applyWriterT, 
        applicativeWriterT: applicativeWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Except_Trans = PS.Control_Monad_Except_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var MonadError = function (catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    return {
        MonadError: MonadError, 
        throwError: throwError
    };
})();
var PS = PS || {};
PS.Control_Monad_Aff = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Error_Class = PS.Control_Monad_Error_Class;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Control_Apply = PS.Control_Apply;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Control_Monad_Eff_Class = PS.Control_Monad_Eff_Class;
    
    function _makeAff(cb) {
      return function(success, error) {
        return cb(function(e) {
          return function() {
            error(e);
          };
        })(function(v) {
          return function() {
            try {
              success(v);
            } catch (e) {
              error(e);
            }
          };
        })();
      }
    }
    ;
    
    function _pure(canceler, v) {
      return function(success, error) {
        try {
          success(v);
        } catch (e) {
          error(e);
        }

        return canceler;
      }
    };
    
    function _throwError(canceler, e) {
      return function(success, error) {
        error(e);

        return canceler;
      };
    };
    
    function _fmap(f, aff) {
      return function(success, error) {
        return aff(function(v) {
          try {
            success(f(v));
          } catch (e) {
            error(e);
          }
        }, error);
      };
    };
    
    function _bind(alwaysCanceler, aff, f) {
      return function(success, error) {
        var canceler1, canceler2;

        var isCanceled    = false;
        var requestCancel = false;

        var onCanceler = function(){};

        canceler1 = aff(function(v) {
          if (requestCancel) {
            isCanceled = true;

            return alwaysCanceler;
          } else {
            canceler2 = f(v)(success, error);

            onCanceler(canceler2);

            return canceler2;
          }
        }, error);

        return function(e) {
          return function(s, f) {
            requestCancel = true;

            if (canceler2 !== undefined) {
              return canceler2(e)(s, f);
            } else {
              return canceler1(e)(function(bool) {
                if (bool || isCanceled) {
                  try {
                    s(true);
                  } catch (e) {
                    f(e);
                  }
                } else {
                  onCanceler = function(canceler) {
                    canceler(e)(s, f);
                  };
                }
              }, f);
            }
          };
        };
      };
    };
    
    function _attempt(Left, Right, aff) {
      return function(success, error) {
        return aff(function(v) {
          try {
            success(Right(v));
          } catch (e) {
            error(e);
          }
        }, function(e) {
          try {
            success(Left(e));
          } catch (e) {
            error(e);
          }
        });
      };
    };
    
    function _runAff(errorT, successT, aff) {
      return function() {
        return aff(function(v) {
          try {
            successT(v)();
          } catch (e) {
            errorT(e)();
          }
        }, function(e) {
          errorT(e)();
        });
      };
    };
    var Canceler = function (x) {
        return x;
    };
    var runAff = function (ex) {
        return function (f) {
            return function (aff) {
                return _runAff(ex, f, aff);
            };
        };
    };
    var makeAff$prime = function (h) {
        return _makeAff(h);
    };
    var functorAff = new Prelude.Functor(function (f) {
        return function (fa) {
            return _fmap(f, fa);
        };
    });
    var attempt = function (aff) {
        return _attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
    };
    var applyAff = new Prelude.Apply(function (ff) {
        return function (fa) {
            return _bind(alwaysCanceler, ff, function (f) {
                return Prelude["<$>"](functorAff)(f)(fa);
            });
        };
    }, function () {
        return functorAff;
    });
    var applicativeAff = new Prelude.Applicative(function () {
        return applyAff;
    }, function (v) {
        return _pure(nonCanceler, v);
    });
    var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
    var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
    var makeAff = function (h) {
        return makeAff$prime(function (e) {
            return function (a) {
                return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](nonCanceler))(h(e)(a));
            };
        });
    };
    var bindAff = new Prelude.Bind(function (fa) {
        return function (f) {
            return _bind(alwaysCanceler, fa, f);
        };
    }, function () {
        return applyAff;
    });
    var monadAff = new Prelude.Monad(function () {
        return applicativeAff;
    }, function () {
        return bindAff;
    });
    var monadErrorAff = new Control_Monad_Error_Class.MonadError(function (aff) {
        return function (ex) {
            return Prelude[">>="](bindAff)(attempt(aff))(Data_Either.either(ex)(Prelude.pure(applicativeAff)));
        };
    }, function (e) {
        return _throwError(nonCanceler, e);
    });
    return {
        Canceler: Canceler, 
        runAff: runAff, 
        nonCanceler: nonCanceler, 
        "makeAff'": makeAff$prime, 
        makeAff: makeAff, 
        attempt: attempt, 
        functorAff: functorAff, 
        applyAff: applyAff, 
        applicativeAff: applicativeAff, 
        bindAff: bindAff, 
        monadAff: monadAff, 
        monadErrorAff: monadErrorAff
    };
})();
var PS = PS || {};
PS.Control_Monad_Aff_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Aff = PS.Control_Monad_Aff;
    var MonadAff = function (liftAff) {
        this.liftAff = liftAff;
    };
    var liftAff = function (dict) {
        return dict.liftAff;
    };
    return {
        MonadAff: MonadAff, 
        liftAff: liftAff
    };
})();
var PS = PS || {};
PS.Halogen_Signal = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Either = PS.Data_Either;
    var SF = function (x) {
        return x;
    };
    var SF1 = function (x) {
        return x;
    };
    var tail = function (_484) {
        return _484.next;
    };
    var stateful$prime = function (s) {
        return function (step) {
            var go = function (s_1) {
                return function (i) {
                    var _1048 = step(s_1)(i);
                    return {
                        result: _1048.value0, 
                        next: go(_1048.value1)
                    };
                };
            };
            return go(s);
        };
    };
    var startingAt = function (s) {
        return function (o) {
            return {
                result: o, 
                next: s
            };
        };
    };
    var stateful = function (s) {
        return function (step) {
            return startingAt(stateful$prime(s)(function (s_1) {
                return function (i) {
                    var s$prime = step(s_1)(i);
                    return new Data_Tuple.Tuple(s$prime, s$prime);
                };
            }))(s);
        };
    };
    var runSF = function (_481) {
        return _481;
    };
    var profunctorSF1 = new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (_490) {
                return {
                    result: g(_490.result), 
                    next: Data_Profunctor.dimap(profunctorSF)(f)(g)(_490.next)
                };
            };
        };
    });
    var profunctorSF = new Data_Profunctor.Profunctor(function (f) {
        return function (g) {
            return function (_489) {
                return function (i) {
                    return Data_Profunctor.dimap(profunctorSF1)(f)(g)(_489(f(i)));
                };
            };
        };
    });
    var head = function (_483) {
        return _483.result;
    };
    var semigroupoidSF1 = new Prelude.Semigroupoid(function (f) {
        return function (g) {
            return {
                result: head(f), 
                next: Prelude["<<<"](semigroupoidSF)(tail(f))(tail(g))
            };
        };
    });
    var semigroupoidSF = new Prelude.Semigroupoid(function (f) {
        return function (g) {
            return function (i) {
                var s1 = runSF(g)(i);
                var s2 = runSF(f)(head(s1));
                return Prelude["<<<"](semigroupoidSF1)(s2)(s1);
            };
        };
    });
    var functorSF1 = new Prelude.Functor(function (f) {
        return function (_486) {
            return {
                result: f(_486.result), 
                next: Prelude["<$>"](functorSF)(f)(_486.next)
            };
        };
    });
    var functorSF = new Prelude.Functor(function (f) {
        return function (_485) {
            return function (i) {
                return Prelude["<$>"](functorSF1)(f)(_485(i));
            };
        };
    });
    var differencesWith = function (f) {
        return function (initial) {
            return stateful$prime(initial)(function (last) {
                return function (next) {
                    var d = f(last)(next);
                    return new Data_Tuple.Tuple(d, next);
                };
            });
        };
    };
    return {
        tail: tail, 
        head: head, 
        startingAt: startingAt, 
        differencesWith: differencesWith, 
        "stateful'": stateful$prime, 
        stateful: stateful, 
        runSF: runSF, 
        functorSF: functorSF, 
        functorSF1: functorSF1, 
        profunctorSF: profunctorSF, 
        profunctorSF1: profunctorSF1, 
        semigroupoidSF: semigroupoidSF, 
        semigroupoidSF1: semigroupoidSF1
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  }
  ;
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  }
  ;
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_312) {
        return function (__dict_Foldable_313) {
            return function (f) {
                return foldr(__dict_Foldable_313)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_312["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_312)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_314) {
        return function (__dict_Foldable_315) {
            return Prelude.flip(traverse_(__dict_Applicative_314)(__dict_Foldable_315));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_318) {
        return function (__dict_Monoid_319) {
            return function (sep) {
                return function (xs) {
                    var go = function (_542) {
                        return function (x) {
                            if (_542.init) {
                                return {
                                    init: false, 
                                    acc: x
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_319["__superclass_Prelude.Semigroup_0"]())(_542.acc)(Prelude["<>"](__dict_Monoid_319["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_318)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_319)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_320) {
        return function (__dict_Monoid_321) {
            return foldl(__dict_Foldable_320)(Prelude["<>"](__dict_Monoid_321["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_321));
        };
    };
    var foldableArray = new Foldable(function (__dict_Monoid_330) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_330["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_330))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        intercalate: intercalate, 
        mconcat: mconcat, 
        for_: for_, 
        traverse_: traverse_, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray
    };
})();
var PS = PS || {};
PS.Data_Nullable = (function () {
    "use strict";
    var Data_Maybe = PS.Data_Maybe;
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var $$null = null;
    function notNull(x) {  return x;};
    var toNullable = Data_Maybe.maybe($$null)(notNull);
    return {
        toNullable: toNullable
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Maybe = PS.Data_Maybe;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function toLower(s) {
      return s.toLowerCase();
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    return {
        joinWith: joinWith, 
        toLower: toLower, 
        split: split, 
        take: take, 
        length: length
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_362) {
        return function (_546) {
            if (_546.length === 0) {
                return Prelude.pure(__dict_Applicative_362)([  ]);
            };
            if (_546.length >= 1) {
                var _1069 = _546.slice(1);
                return Prelude["<*>"](__dict_Applicative_362["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_362["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_546[0]))(sequence(traversableArray)(__dict_Applicative_362)(_1069));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_361) {
        return function (f) {
            return function (_545) {
                if (_545.length === 0) {
                    return Prelude.pure(__dict_Applicative_361)([  ]);
                };
                if (_545.length >= 1) {
                    var _1073 = _545.slice(1);
                    return Prelude["<*>"](__dict_Applicative_361["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_361["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(f(_545[0])))(traverse(traversableArray)(__dict_Applicative_361)(f)(_1073));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    return {
        Traversable: Traversable, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray
    };
})();
var PS = PS || {};
PS.Data_Bifunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Const = PS.Data_Const;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Bifunctor = function (bimap) {
        this.bimap = bimap;
    };
    var bimap = function (dict) {
        return dict.bimap;
    };
    var rmap = function (__dict_Bifunctor_399) {
        return bimap(__dict_Bifunctor_399)(Prelude.id(Prelude.categoryArr));
    };
    return {
        Bifunctor: Bifunctor, 
        rmap: rmap, 
        bimap: bimap
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var IsForeign = function (read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    var readWith = function (__dict_IsForeign_487) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_487)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_488) {
        return function (__dict_Index_489) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_489)(value)(prop))(readWith(__dict_IsForeign_488)(Data_Foreign_Index.errorAt(__dict_Index_489)(prop)));
                };
            };
        };
    };
    var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
    return {
        IsForeign: IsForeign, 
        readProp: readProp, 
        readWith: readWith, 
        read: read, 
        stringIsForeign: stringIsForeign, 
        booleanIsForeign: booleanIsForeign
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Identity = function (x) {
        return x;
    };
    var runIdentity = function (_658) {
        return _658;
    };
    var functorIdentity = new Prelude.Functor(function (f) {
        return function (_664) {
            return f(_664);
        };
    });
    var applyIdentity = new Prelude.Apply(function (_665) {
        return function (_666) {
            return _665(_666);
        };
    }, function () {
        return functorIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity);
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    return {
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Leaf = (function () {
        function Leaf() {

        };
        Leaf.value = new Leaf();
        return Leaf;
    })();
    var Two = (function () {
        function Two(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Two.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Two(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Two;
    })();
    var Three = (function () {
        function Three(value0, value1, value2, value3, value4, value5, value6) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
            this.value6 = value6;
        };
        Three.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return function (value6) {
                                    return new Three(value0, value1, value2, value3, value4, value5, value6);
                                };
                            };
                        };
                    };
                };
            };
        };
        return Three;
    })();
    var TwoLeft = (function () {
        function TwoLeft(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoLeft(value0, value1, value2);
                };
            };
        };
        return TwoLeft;
    })();
    var TwoRight = (function () {
        function TwoRight(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoRight(value0, value1, value2);
                };
            };
        };
        return TwoRight;
    })();
    var ThreeLeft = (function () {
        function ThreeLeft(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeLeft;
    })();
    var ThreeMiddle = (function () {
        function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeMiddle.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeMiddle;
    })();
    var ThreeRight = (function () {
        function ThreeRight(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeRight(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeRight;
    })();
    var KickUp = (function () {
        function KickUp(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        KickUp.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new KickUp(value0, value1, value2, value3);
                    };
                };
            };
        };
        return KickUp;
    })();
    var toList = function (_701) {
        if (_701 instanceof Leaf) {
            return [  ];
        };
        if (_701 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_701.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_701.value1, _701.value2) ])(toList(_701.value3)));
        };
        if (_701 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_701.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_701.value1, _701.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_701.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_701.value4, _701.value5) ])(toList(_701.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var singleton = function (k) {
        return function (v) {
            return new Two(Leaf.value, k, v, Leaf.value);
        };
    };
    var showMap = function (__dict_Show_601) {
        return function (__dict_Show_602) {
            return new Prelude.Show(function (m) {
                return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_601)(__dict_Show_602)))(toList(m));
            });
        };
    };
    var lookup = function (__copy___dict_Ord_605) {
        return function (__copy_k) {
            return function (__copy__698) {
                var __dict_Ord_605 = __copy___dict_Ord_605;
                var k = __copy_k;
                var _698 = __copy__698;
                tco: while (true) {
                    if (_698 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_698 instanceof Two && Prelude["=="](__dict_Ord_605["__superclass_Prelude.Eq_0"]())(k)(_698.value1)) {
                        return new Data_Maybe.Just(_698.value2);
                    };
                    if (_698 instanceof Two && Prelude["<"](__dict_Ord_605)(k)(_698.value1)) {
                        var __tco___dict_Ord_605 = __dict_Ord_605;
                        var __tco_k = k;
                        var __tco__698 = _698.value0;
                        __dict_Ord_605 = __tco___dict_Ord_605;
                        k = __tco_k;
                        _698 = __tco__698;
                        continue tco;
                    };
                    if (_698 instanceof Two) {
                        var __tco___dict_Ord_605 = __dict_Ord_605;
                        var __tco_k = k;
                        var __tco__698 = _698.value3;
                        __dict_Ord_605 = __tco___dict_Ord_605;
                        k = __tco_k;
                        _698 = __tco__698;
                        continue tco;
                    };
                    if (_698 instanceof Three && Prelude["=="](__dict_Ord_605["__superclass_Prelude.Eq_0"]())(k)(_698.value1)) {
                        return new Data_Maybe.Just(_698.value2);
                    };
                    if (_698 instanceof Three && Prelude["=="](__dict_Ord_605["__superclass_Prelude.Eq_0"]())(k)(_698.value4)) {
                        return new Data_Maybe.Just(_698.value5);
                    };
                    if (_698 instanceof Three && Prelude["<"](__dict_Ord_605)(k)(_698.value1)) {
                        var __tco___dict_Ord_605 = __dict_Ord_605;
                        var __tco_k = k;
                        var __tco__698 = _698.value0;
                        __dict_Ord_605 = __tco___dict_Ord_605;
                        k = __tco_k;
                        _698 = __tco__698;
                        continue tco;
                    };
                    if (_698 instanceof Three && (Prelude["<"](__dict_Ord_605)(_698.value1)(k) && Prelude["<="](__dict_Ord_605)(k)(_698.value4))) {
                        var __tco___dict_Ord_605 = __dict_Ord_605;
                        var __tco_k = k;
                        var __tco__698 = _698.value3;
                        __dict_Ord_605 = __tco___dict_Ord_605;
                        k = __tco_k;
                        _698 = __tco__698;
                        continue tco;
                    };
                    if (_698 instanceof Three) {
                        var __tco___dict_Ord_605 = __dict_Ord_605;
                        var __tco_k = k;
                        var __tco__698 = _698.value6;
                        __dict_Ord_605 = __tco___dict_Ord_605;
                        k = __tco_k;
                        _698 = __tco__698;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var member = function (__dict_Ord_606) {
        return function (k) {
            return function (m) {
                return Data_Maybe.isJust(lookup(__dict_Ord_606)(k)(m));
            };
        };
    };
    var isEmpty = function (_697) {
        if (_697 instanceof Leaf) {
            return true;
        };
        return false;
    };
    var fromZipper = function (__copy___dict_Ord_607) {
        return function (__copy__699) {
            return function (__copy__700) {
                var __dict_Ord_607 = __copy___dict_Ord_607;
                var _699 = __copy__699;
                var _700 = __copy__700;
                tco: while (true) {
                    if (_699.length === 0) {
                        return _700;
                    };
                    if (_699.length >= 1) {
                        var _1147 = _699.slice(1);
                        if (_699[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_607 = __dict_Ord_607;
                            var __tco__700 = new Two(_700, (_699[0]).value0, (_699[0]).value1, (_699[0]).value2);
                            __dict_Ord_607 = __tco___dict_Ord_607;
                            _699 = _1147;
                            _700 = __tco__700;
                            continue tco;
                        };
                    };
                    if (_699.length >= 1) {
                        var _1152 = _699.slice(1);
                        if (_699[0] instanceof TwoRight) {
                            var __tco___dict_Ord_607 = __dict_Ord_607;
                            var __tco__700 = new Two((_699[0]).value0, (_699[0]).value1, (_699[0]).value2, _700);
                            __dict_Ord_607 = __tco___dict_Ord_607;
                            _699 = _1152;
                            _700 = __tco__700;
                            continue tco;
                        };
                    };
                    if (_699.length >= 1) {
                        var _1160 = _699.slice(1);
                        if (_699[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_607 = __dict_Ord_607;
                            var __tco__700 = new Three(_700, (_699[0]).value0, (_699[0]).value1, (_699[0]).value2, (_699[0]).value3, (_699[0]).value4, (_699[0]).value5);
                            __dict_Ord_607 = __tco___dict_Ord_607;
                            _699 = _1160;
                            _700 = __tco__700;
                            continue tco;
                        };
                    };
                    if (_699.length >= 1) {
                        var _1168 = _699.slice(1);
                        if (_699[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_607 = __dict_Ord_607;
                            var __tco__700 = new Three((_699[0]).value0, (_699[0]).value1, (_699[0]).value2, _700, (_699[0]).value3, (_699[0]).value4, (_699[0]).value5);
                            __dict_Ord_607 = __tco___dict_Ord_607;
                            _699 = _1168;
                            _700 = __tco__700;
                            continue tco;
                        };
                    };
                    if (_699.length >= 1) {
                        var _1176 = _699.slice(1);
                        if (_699[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_607 = __dict_Ord_607;
                            var __tco__700 = new Three((_699[0]).value0, (_699[0]).value1, (_699[0]).value2, (_699[0]).value3, (_699[0]).value4, (_699[0]).value5, _700);
                            __dict_Ord_607 = __tco___dict_Ord_607;
                            _699 = _1176;
                            _700 = __tco__700;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_608) {
        var up = function (__copy___dict_Ord_609) {
            return function (__copy__707) {
                return function (__copy__708) {
                    var __dict_Ord_609 = __copy___dict_Ord_609;
                    var _707 = __copy__707;
                    var _708 = __copy__708;
                    tco: while (true) {
                        if (_707.length === 0) {
                            return new Two(_708.value0, _708.value1, _708.value2, _708.value3);
                        };
                        if (_707.length >= 1) {
                            var _1191 = _707.slice(1);
                            if (_707[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_609)(_1191)(new Three(_708.value0, _708.value1, _708.value2, _708.value3, (_707[0]).value0, (_707[0]).value1, (_707[0]).value2));
                            };
                        };
                        if (_707.length >= 1) {
                            var _1200 = _707.slice(1);
                            if (_707[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_609)(_1200)(new Three((_707[0]).value0, (_707[0]).value1, (_707[0]).value2, _708.value0, _708.value1, _708.value2, _708.value3));
                            };
                        };
                        if (_707.length >= 1) {
                            var _1212 = _707.slice(1);
                            if (_707[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_609 = __dict_Ord_609;
                                var __tco__708 = new KickUp(new Two(_708.value0, _708.value1, _708.value2, _708.value3), (_707[0]).value0, (_707[0]).value1, new Two((_707[0]).value2, (_707[0]).value3, (_707[0]).value4, (_707[0]).value5));
                                __dict_Ord_609 = __tco___dict_Ord_609;
                                _707 = _1212;
                                _708 = __tco__708;
                                continue tco;
                            };
                        };
                        if (_707.length >= 1) {
                            var _1224 = _707.slice(1);
                            if (_707[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_609 = __dict_Ord_609;
                                var __tco__708 = new KickUp(new Two((_707[0]).value0, (_707[0]).value1, (_707[0]).value2, _708.value0), _708.value1, _708.value2, new Two(_708.value3, (_707[0]).value3, (_707[0]).value4, (_707[0]).value5));
                                __dict_Ord_609 = __tco___dict_Ord_609;
                                _707 = _1224;
                                _708 = __tco__708;
                                continue tco;
                            };
                        };
                        if (_707.length >= 1) {
                            var _1236 = _707.slice(1);
                            if (_707[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_609 = __dict_Ord_609;
                                var __tco__708 = new KickUp(new Two((_707[0]).value0, (_707[0]).value1, (_707[0]).value2, (_707[0]).value3), (_707[0]).value4, (_707[0]).value5, new Two(_708.value0, _708.value1, _708.value2, _708.value3));
                                __dict_Ord_609 = __tco___dict_Ord_609;
                                _707 = _1236;
                                _708 = __tco__708;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_610) {
            return function (__copy_ctx) {
                return function (__copy_k) {
                    return function (__copy_v) {
                        return function (__copy__706) {
                            var __dict_Ord_610 = __copy___dict_Ord_610;
                            var ctx = __copy_ctx;
                            var k = __copy_k;
                            var v = __copy_v;
                            var _706 = __copy__706;
                            tco: while (true) {
                                if (_706 instanceof Leaf) {
                                    return up(__dict_Ord_610)(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                                };
                                if (_706 instanceof Two && Prelude["=="](__dict_Ord_610["__superclass_Prelude.Eq_0"]())(k)(_706.value1)) {
                                    return fromZipper(__dict_Ord_610)(ctx)(new Two(_706.value0, k, v, _706.value3));
                                };
                                if (_706 instanceof Two && Prelude["<"](__dict_Ord_610)(k)(_706.value1)) {
                                    var __tco___dict_Ord_610 = __dict_Ord_610;
                                    var __tco_ctx = Prelude[":"](new TwoLeft(_706.value1, _706.value2, _706.value3))(ctx);
                                    var __tco_k = k;
                                    var __tco_v = v;
                                    var __tco__706 = _706.value0;
                                    __dict_Ord_610 = __tco___dict_Ord_610;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    v = __tco_v;
                                    _706 = __tco__706;
                                    continue tco;
                                };
                                if (_706 instanceof Two) {
                                    var __tco___dict_Ord_610 = __dict_Ord_610;
                                    var __tco_ctx = Prelude[":"](new TwoRight(_706.value0, _706.value1, _706.value2))(ctx);
                                    var __tco_k = k;
                                    var __tco_v = v;
                                    var __tco__706 = _706.value3;
                                    __dict_Ord_610 = __tco___dict_Ord_610;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    v = __tco_v;
                                    _706 = __tco__706;
                                    continue tco;
                                };
                                if (_706 instanceof Three && Prelude["=="](__dict_Ord_610["__superclass_Prelude.Eq_0"]())(k)(_706.value1)) {
                                    return fromZipper(__dict_Ord_610)(ctx)(new Three(_706.value0, k, v, _706.value3, _706.value4, _706.value5, _706.value6));
                                };
                                if (_706 instanceof Three && Prelude["=="](__dict_Ord_610["__superclass_Prelude.Eq_0"]())(k)(_706.value4)) {
                                    return fromZipper(__dict_Ord_610)(ctx)(new Three(_706.value0, _706.value1, _706.value2, _706.value3, k, v, _706.value6));
                                };
                                if (_706 instanceof Three && Prelude["<"](__dict_Ord_610)(k)(_706.value1)) {
                                    var __tco___dict_Ord_610 = __dict_Ord_610;
                                    var __tco_ctx = Prelude[":"](new ThreeLeft(_706.value1, _706.value2, _706.value3, _706.value4, _706.value5, _706.value6))(ctx);
                                    var __tco_k = k;
                                    var __tco_v = v;
                                    var __tco__706 = _706.value0;
                                    __dict_Ord_610 = __tco___dict_Ord_610;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    v = __tco_v;
                                    _706 = __tco__706;
                                    continue tco;
                                };
                                if (_706 instanceof Three && (Prelude["<"](__dict_Ord_610)(_706.value1)(k) && Prelude["<="](__dict_Ord_610)(k)(_706.value4))) {
                                    var __tco___dict_Ord_610 = __dict_Ord_610;
                                    var __tco_ctx = Prelude[":"](new ThreeMiddle(_706.value0, _706.value1, _706.value2, _706.value4, _706.value5, _706.value6))(ctx);
                                    var __tco_k = k;
                                    var __tco_v = v;
                                    var __tco__706 = _706.value3;
                                    __dict_Ord_610 = __tco___dict_Ord_610;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    v = __tco_v;
                                    _706 = __tco__706;
                                    continue tco;
                                };
                                if (_706 instanceof Three) {
                                    var __tco___dict_Ord_610 = __dict_Ord_610;
                                    var __tco_ctx = Prelude[":"](new ThreeRight(_706.value0, _706.value1, _706.value2, _706.value3, _706.value4, _706.value5))(ctx);
                                    var __tco_k = k;
                                    var __tco_v = v;
                                    var __tco__706 = _706.value6;
                                    __dict_Ord_610 = __tco___dict_Ord_610;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    v = __tco_v;
                                    _706 = __tco__706;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_608)([  ]);
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_614) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_694) {
                return insert(__dict_Ord_614)(_694.value0)(_694.value1)(m);
            };
        })(empty);
    };
    var $$delete = function (__dict_Ord_616) {
        var up = function (__copy___dict_Ord_617) {
            return function (__copy__710) {
                return function (__copy_e) {
                    var __dict_Ord_617 = __copy___dict_Ord_617;
                    var _710 = __copy__710;
                    var e = __copy_e;
                    tco: while (true) {
                        if (_710.length === 0) {
                            return e;
                        };
                        if (_710.length >= 1) {
                            var _1297 = _710.slice(1);
                            if (_710[0] instanceof TwoLeft && ((_710[0]).value2 instanceof Leaf && e instanceof Leaf)) {
                                return fromZipper(__dict_Ord_617)(_1297)(new Two(Leaf.value, (_710[0]).value0, (_710[0]).value1, Leaf.value));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1302 = _710.slice(1);
                            if (_710[0] instanceof TwoRight && ((_710[0]).value0 instanceof Leaf && e instanceof Leaf)) {
                                return fromZipper(__dict_Ord_617)(_1302)(new Two(Leaf.value, (_710[0]).value1, (_710[0]).value2, Leaf.value));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1311 = _710.slice(1);
                            if (_710[0] instanceof TwoLeft && (_710[0]).value2 instanceof Two) {
                                var __tco___dict_Ord_617 = __dict_Ord_617;
                                var __tco_e = new Three(e, (_710[0]).value0, (_710[0]).value1, (_710[0]).value2.value0, (_710[0]).value2.value1, (_710[0]).value2.value2, (_710[0]).value2.value3);
                                __dict_Ord_617 = __tco___dict_Ord_617;
                                _710 = _1311;
                                e = __tco_e;
                                continue tco;
                            };
                        };
                        if (_710.length >= 1) {
                            var _1320 = _710.slice(1);
                            if (_710[0] instanceof TwoRight && (_710[0]).value0 instanceof Two) {
                                var __tco___dict_Ord_617 = __dict_Ord_617;
                                var __tco_e = new Three((_710[0]).value0.value0, (_710[0]).value0.value1, (_710[0]).value0.value2, (_710[0]).value0.value3, (_710[0]).value1, (_710[0]).value2, e);
                                __dict_Ord_617 = __tco___dict_Ord_617;
                                _710 = _1320;
                                e = __tco_e;
                                continue tco;
                            };
                        };
                        if (_710.length >= 1) {
                            var _1332 = _710.slice(1);
                            if (_710[0] instanceof TwoLeft && (_710[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_617)(_1332)(new Two(new Two(e, (_710[0]).value0, (_710[0]).value1, (_710[0]).value2.value0), (_710[0]).value2.value1, (_710[0]).value2.value2, new Two((_710[0]).value2.value3, (_710[0]).value2.value4, (_710[0]).value2.value5, (_710[0]).value2.value6)));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1344 = _710.slice(1);
                            if (_710[0] instanceof TwoRight && (_710[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_617)(_1344)(new Two(new Two((_710[0]).value0.value0, (_710[0]).value0.value1, (_710[0]).value0.value2, (_710[0]).value0.value3), (_710[0]).value0.value4, (_710[0]).value0.value5, new Two((_710[0]).value0.value6, (_710[0]).value1, (_710[0]).value2, e)));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1352 = _710.slice(1);
                            if (_710[0] instanceof ThreeLeft && ((_710[0]).value2 instanceof Leaf && ((_710[0]).value5 instanceof Leaf && e instanceof Leaf))) {
                                return fromZipper(__dict_Ord_617)(_1352)(new Three(Leaf.value, (_710[0]).value0, (_710[0]).value1, Leaf.value, (_710[0]).value3, (_710[0]).value4, Leaf.value));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1360 = _710.slice(1);
                            if (_710[0] instanceof ThreeMiddle && ((_710[0]).value0 instanceof Leaf && ((_710[0]).value5 instanceof Leaf && e instanceof Leaf))) {
                                return fromZipper(__dict_Ord_617)(_1360)(new Three(Leaf.value, (_710[0]).value1, (_710[0]).value2, Leaf.value, (_710[0]).value3, (_710[0]).value4, Leaf.value));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1368 = _710.slice(1);
                            if (_710[0] instanceof ThreeRight && ((_710[0]).value0 instanceof Leaf && ((_710[0]).value3 instanceof Leaf && e instanceof Leaf))) {
                                return fromZipper(__dict_Ord_617)(_1368)(new Three(Leaf.value, (_710[0]).value1, (_710[0]).value2, Leaf.value, (_710[0]).value4, (_710[0]).value5, Leaf.value));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1380 = _710.slice(1);
                            if (_710[0] instanceof ThreeLeft && (_710[0]).value2 instanceof Two) {
                                return fromZipper(__dict_Ord_617)(_1380)(new Two(new Three(e, (_710[0]).value0, (_710[0]).value1, (_710[0]).value2.value0, (_710[0]).value2.value1, (_710[0]).value2.value2, (_710[0]).value2.value3), (_710[0]).value3, (_710[0]).value4, (_710[0]).value5));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1392 = _710.slice(1);
                            if (_710[0] instanceof ThreeMiddle && (_710[0]).value0 instanceof Two) {
                                return fromZipper(__dict_Ord_617)(_1392)(new Two(new Three((_710[0]).value0.value0, (_710[0]).value0.value1, (_710[0]).value0.value2, (_710[0]).value0.value3, (_710[0]).value1, (_710[0]).value2, e), (_710[0]).value3, (_710[0]).value4, (_710[0]).value5));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1404 = _710.slice(1);
                            if (_710[0] instanceof ThreeMiddle && (_710[0]).value5 instanceof Two) {
                                return fromZipper(__dict_Ord_617)(_1404)(new Two((_710[0]).value0, (_710[0]).value1, (_710[0]).value2, new Three(e, (_710[0]).value3, (_710[0]).value4, (_710[0]).value5.value0, (_710[0]).value5.value1, (_710[0]).value5.value2, (_710[0]).value5.value3)));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1416 = _710.slice(1);
                            if (_710[0] instanceof ThreeRight && (_710[0]).value3 instanceof Two) {
                                return fromZipper(__dict_Ord_617)(_1416)(new Two((_710[0]).value0, (_710[0]).value1, (_710[0]).value2, new Three((_710[0]).value3.value0, (_710[0]).value3.value1, (_710[0]).value3.value2, (_710[0]).value3.value3, (_710[0]).value4, (_710[0]).value5, e)));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1431 = _710.slice(1);
                            if (_710[0] instanceof ThreeLeft && (_710[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_617)(_1431)(new Three(new Two(e, (_710[0]).value0, (_710[0]).value1, (_710[0]).value2.value0), (_710[0]).value2.value1, (_710[0]).value2.value2, new Two((_710[0]).value2.value3, (_710[0]).value2.value4, (_710[0]).value2.value5, (_710[0]).value2.value6), (_710[0]).value3, (_710[0]).value4, (_710[0]).value5));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1446 = _710.slice(1);
                            if (_710[0] instanceof ThreeMiddle && (_710[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_617)(_1446)(new Three(new Two((_710[0]).value0.value0, (_710[0]).value0.value1, (_710[0]).value0.value2, (_710[0]).value0.value3), (_710[0]).value0.value4, (_710[0]).value0.value5, new Two((_710[0]).value0.value6, (_710[0]).value1, (_710[0]).value2, e), (_710[0]).value3, (_710[0]).value4, (_710[0]).value5));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1461 = _710.slice(1);
                            if (_710[0] instanceof ThreeMiddle && (_710[0]).value5 instanceof Three) {
                                return fromZipper(__dict_Ord_617)(_1461)(new Three((_710[0]).value0, (_710[0]).value1, (_710[0]).value2, new Two(e, (_710[0]).value3, (_710[0]).value4, (_710[0]).value5.value0), (_710[0]).value5.value1, (_710[0]).value5.value2, new Two((_710[0]).value5.value3, (_710[0]).value5.value4, (_710[0]).value5.value5, (_710[0]).value5.value6)));
                            };
                        };
                        if (_710.length >= 1) {
                            var _1476 = _710.slice(1);
                            if (_710[0] instanceof ThreeRight && (_710[0]).value3 instanceof Three) {
                                return fromZipper(__dict_Ord_617)(_1476)(new Three((_710[0]).value0, (_710[0]).value1, (_710[0]).value2, new Two((_710[0]).value3.value0, (_710[0]).value3.value1, (_710[0]).value3.value2, (_710[0]).value3.value3), (_710[0]).value3.value4, (_710[0]).value3.value5, new Two((_710[0]).value3.value6, (_710[0]).value4, (_710[0]).value5, e)));
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var removeMaxNode = function (__copy___dict_Ord_618) {
            return function (__copy_ctx) {
                return function (__copy__712) {
                    var __dict_Ord_618 = __copy___dict_Ord_618;
                    var ctx = __copy_ctx;
                    var _712 = __copy__712;
                    tco: while (true) {
                        if (_712 instanceof Two && (_712.value0 instanceof Leaf && _712.value3 instanceof Leaf)) {
                            return up(__dict_Ord_618)(ctx)(Leaf.value);
                        };
                        if (_712 instanceof Two) {
                            var __tco___dict_Ord_618 = __dict_Ord_618;
                            var __tco_ctx = Prelude[":"](new TwoRight(_712.value0, _712.value1, _712.value2))(ctx);
                            var __tco__712 = _712.value3;
                            __dict_Ord_618 = __tco___dict_Ord_618;
                            ctx = __tco_ctx;
                            _712 = __tco__712;
                            continue tco;
                        };
                        if (_712 instanceof Three && (_712.value0 instanceof Leaf && (_712.value3 instanceof Leaf && _712.value6 instanceof Leaf))) {
                            return up(__dict_Ord_618)(Prelude[":"](new TwoRight(Leaf.value, _712.value1, _712.value2))(ctx))(Leaf.value);
                        };
                        if (_712 instanceof Three) {
                            var __tco___dict_Ord_618 = __dict_Ord_618;
                            var __tco_ctx = Prelude[":"](new ThreeRight(_712.value0, _712.value1, _712.value2, _712.value3, _712.value4, _712.value5))(ctx);
                            var __tco__712 = _712.value6;
                            __dict_Ord_618 = __tco___dict_Ord_618;
                            ctx = __tco_ctx;
                            _712 = __tco__712;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var maxNode = function (__copy___dict_Ord_619) {
            return function (__copy__711) {
                var __dict_Ord_619 = __copy___dict_Ord_619;
                var _711 = __copy__711;
                tco: while (true) {
                    if (_711 instanceof Two && _711.value3 instanceof Leaf) {
                        return {
                            key: _711.value1, 
                            value: _711.value2
                        };
                    };
                    if (_711 instanceof Two) {
                        var __tco___dict_Ord_619 = __dict_Ord_619;
                        var __tco__711 = _711.value3;
                        __dict_Ord_619 = __tco___dict_Ord_619;
                        _711 = __tco__711;
                        continue tco;
                    };
                    if (_711 instanceof Three && _711.value6 instanceof Leaf) {
                        return {
                            key: _711.value4, 
                            value: _711.value5
                        };
                    };
                    if (_711 instanceof Three) {
                        var __tco___dict_Ord_619 = __dict_Ord_619;
                        var __tco__711 = _711.value6;
                        __dict_Ord_619 = __tco___dict_Ord_619;
                        _711 = __tco__711;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        var down = function (__copy___dict_Ord_620) {
            return function (__copy_ctx) {
                return function (__copy_k) {
                    return function (__copy__709) {
                        var __dict_Ord_620 = __copy___dict_Ord_620;
                        var ctx = __copy_ctx;
                        var k = __copy_k;
                        var _709 = __copy__709;
                        tco: while (true) {
                            if (_709 instanceof Leaf) {
                                return fromZipper(__dict_Ord_620)(ctx)(Leaf.value);
                            };
                            if (_709 instanceof Two && (_709.value0 instanceof Leaf && (_709.value3 instanceof Leaf && Prelude["=="](__dict_Ord_620["__superclass_Prelude.Eq_0"]())(k)(_709.value1)))) {
                                return up(__dict_Ord_620)(ctx)(Leaf.value);
                            };
                            if (_709 instanceof Two) {
                                if (Prelude["=="](__dict_Ord_620["__superclass_Prelude.Eq_0"]())(k)(_709.value1)) {
                                    var max = maxNode(__dict_Ord_620)(_709.value0);
                                    return removeMaxNode(__dict_Ord_620)(Prelude[":"](new TwoLeft(max.key, max.value, _709.value3))(ctx))(_709.value0);
                                };
                                if (Prelude["<"](__dict_Ord_620)(k)(_709.value1)) {
                                    var __tco___dict_Ord_620 = __dict_Ord_620;
                                    var __tco_ctx = Prelude[":"](new TwoLeft(_709.value1, _709.value2, _709.value3))(ctx);
                                    var __tco_k = k;
                                    var __tco__709 = _709.value0;
                                    __dict_Ord_620 = __tco___dict_Ord_620;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    _709 = __tco__709;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_620 = __dict_Ord_620;
                                    var __tco_ctx = Prelude[":"](new TwoRight(_709.value0, _709.value1, _709.value2))(ctx);
                                    var __tco_k = k;
                                    var __tco__709 = _709.value3;
                                    __dict_Ord_620 = __tco___dict_Ord_620;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    _709 = __tco__709;
                                    continue tco;
                                };
                            };
                            if (_709 instanceof Three && (_709.value0 instanceof Leaf && (_709.value3 instanceof Leaf && _709.value6 instanceof Leaf))) {
                                if (Prelude["=="](__dict_Ord_620["__superclass_Prelude.Eq_0"]())(k)(_709.value1)) {
                                    return fromZipper(__dict_Ord_620)(ctx)(new Two(Leaf.value, _709.value4, _709.value5, Leaf.value));
                                };
                                if (Prelude["=="](__dict_Ord_620["__superclass_Prelude.Eq_0"]())(k)(_709.value4)) {
                                    return fromZipper(__dict_Ord_620)(ctx)(new Two(Leaf.value, _709.value1, _709.value2, Leaf.value));
                                };
                            };
                            if (_709 instanceof Three) {
                                if (Prelude["=="](__dict_Ord_620["__superclass_Prelude.Eq_0"]())(k)(_709.value1)) {
                                    var max = maxNode(__dict_Ord_620)(_709.value0);
                                    return removeMaxNode(__dict_Ord_620)(Prelude[":"](new ThreeLeft(max.key, max.value, _709.value3, _709.value4, _709.value5, _709.value6))(ctx))(_709.value0);
                                };
                                if (Prelude["=="](__dict_Ord_620["__superclass_Prelude.Eq_0"]())(k)(_709.value4)) {
                                    var max = maxNode(__dict_Ord_620)(_709.value3);
                                    return removeMaxNode(__dict_Ord_620)(Prelude[":"](new ThreeMiddle(_709.value0, _709.value1, _709.value2, max.key, max.value, _709.value6))(ctx))(_709.value3);
                                };
                                if (Prelude["<"](__dict_Ord_620)(k)(_709.value1)) {
                                    var __tco___dict_Ord_620 = __dict_Ord_620;
                                    var __tco_ctx = Prelude[":"](new ThreeLeft(_709.value1, _709.value2, _709.value3, _709.value4, _709.value5, _709.value6))(ctx);
                                    var __tco_k = k;
                                    var __tco__709 = _709.value0;
                                    __dict_Ord_620 = __tco___dict_Ord_620;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    _709 = __tco__709;
                                    continue tco;
                                };
                                if (Prelude["<"](__dict_Ord_620)(_709.value1)(k) && Prelude["<"](__dict_Ord_620)(k)(_709.value4)) {
                                    var __tco___dict_Ord_620 = __dict_Ord_620;
                                    var __tco_ctx = Prelude[":"](new ThreeMiddle(_709.value0, _709.value1, _709.value2, _709.value4, _709.value5, _709.value6))(ctx);
                                    var __tco_k = k;
                                    var __tco__709 = _709.value3;
                                    __dict_Ord_620 = __tco___dict_Ord_620;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    _709 = __tco__709;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_620 = __dict_Ord_620;
                                    var __tco_ctx = Prelude[":"](new ThreeRight(_709.value0, _709.value1, _709.value2, _709.value3, _709.value4, _709.value5))(ctx);
                                    var __tco_k = k;
                                    var __tco__709 = _709.value6;
                                    __dict_Ord_620 = __tco___dict_Ord_620;
                                    ctx = __tco_ctx;
                                    k = __tco_k;
                                    _709 = __tco__709;
                                    continue tco;
                                };
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_616)([  ]);
    };
    return {
        member: member, 
        "delete": $$delete, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        insert: insert, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty, 
        showMap: showMap
    };
})();
var PS = PS || {};
PS.Data_Set = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Set = (function () {
        function Set(value0) {
            this.value0 = value0;
        };
        Set.create = function (value0) {
            return new Set(value0);
        };
        return Set;
    })();
    var toList = function (_720) {
        return Data_Array.map(Data_Tuple.fst)(Data_Map.toList(_720.value0));
    };
    var singleton = function (a) {
        return new Set(Data_Map.singleton(a)(Prelude.unit));
    };
    var member = function (__dict_Ord_634) {
        return function (a) {
            return function (_717) {
                return Data_Map.member(__dict_Ord_634)(a)(_717.value0);
            };
        };
    };
    var isEmpty = function (_715) {
        return Data_Map.isEmpty(_715.value0);
    };
    var insert = function (__dict_Ord_635) {
        return function (a) {
            return function (_718) {
                return new Set(Data_Map.insert(__dict_Ord_635)(a)(Prelude.unit)(_718.value0));
            };
        };
    };
    var empty = new Set(Data_Map.empty);
    var fromList = function (__dict_Ord_637) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (a) {
                return insert(__dict_Ord_637)(a)(m);
            };
        })(empty);
    };
    var $$delete = function (__dict_Ord_639) {
        return function (a) {
            return function (_719) {
                return new Set(Data_Map["delete"](__dict_Ord_639)(a)(_719.value0));
            };
        };
    };
    return {
        fromList: fromList, 
        toList: toList, 
        "delete": $$delete, 
        member: member, 
        insert: insert, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Data_JSON = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Map = PS.Data_Map;
    var Data_Set = PS.Data_Set;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    function jsonParseImpl (left, right, string) {    try       { return right(JSON.parse(string)); }    catch (e) { return left(e.toString()); }};
    function jsonToValueImpl (auxes, ctors) {    var left   = auxes.left;    var right  = auxes.right;    var either = auxes.either;    var insert = auxes.insert;    var empty  = auxes.empty;    var Null   = ctors.null;    var Number = ctors.number;    var Bool   = ctors.bool;    var String = ctors.string;    var Array  = ctors.array;    var Object = ctors.object;    var parse  = function(json) {        var typ    = Object.prototype.toString.call(json).slice(8,-1);         if        (typ === 'Number') {             return right(Number(json));        } else if (typ === 'Boolean') {             return right(Bool(json));        } else if (typ === 'String') {             return right(String(json));        } else if (typ === 'Null') {             return right(Null);        } else if (typ === 'Array') {             var ary = [];            for(var i = 0; i < json.length; i++) {                 either                     (function(l){return left(l)})                     (function(r){ary.push(r)})                     (parse(json[i]))             }             return right(Array(ary));        } else if (typ === 'Object') {            var obj = empty;            for(var k in json) {                 either                     (function(l){return left(l)})                     (function(r){obj = insert(k)(r)(obj)})                     (parse(json[k]));            }             return right(Object(obj));        } else {             return left('unknown type: ' + typ);        }   };   return parse;};
    var jsNull = null;
    function unsafeCoerce (a) {return a;};
    function objToHash (fst, snd, obj) {    var hash = {};    for(var i = 0; i < obj.length; i++) {        hash[fst(obj[i])] = valueToJSONImpl(snd(obj[i]));    }    return hash;};
    function jsonStringify(json) {    return JSON.stringify(json);};
    var JObject = (function () {
        function JObject(value0) {
            this.value0 = value0;
        };
        JObject.create = function (value0) {
            return new JObject(value0);
        };
        return JObject;
    })();
    var JArray = (function () {
        function JArray(value0) {
            this.value0 = value0;
        };
        JArray.create = function (value0) {
            return new JArray(value0);
        };
        return JArray;
    })();
    var JString = (function () {
        function JString(value0) {
            this.value0 = value0;
        };
        JString.create = function (value0) {
            return new JString(value0);
        };
        return JString;
    })();
    var JNumber = (function () {
        function JNumber(value0) {
            this.value0 = value0;
        };
        JNumber.create = function (value0) {
            return new JNumber(value0);
        };
        return JNumber;
    })();
    var JBool = (function () {
        function JBool(value0) {
            this.value0 = value0;
        };
        JBool.create = function (value0) {
            return new JBool(value0);
        };
        return JBool;
    })();
    var JNull = (function () {
        function JNull() {

        };
        JNull.value = new JNull();
        return JNull;
    })();
    var FromJSON = function (parseJSON) {
        this.parseJSON = parseJSON;
    };
    var ToJSON = function (toJSON) {
        this.toJSON = toJSON;
    };
    var valueToJSONImpl = function (_727) {
        if (_727 instanceof JObject) {
            return objToHash(Data_Tuple.fst, Data_Tuple.snd, Data_Map.toList(_727.value0));
        };
        if (_727 instanceof JArray) {
            return unsafeCoerce(Prelude["<$>"](Data_Array.functorArray)(valueToJSONImpl)(_727.value0));
        };
        if (_727 instanceof JString) {
            return unsafeCoerce(_727.value0);
        };
        if (_727 instanceof JNumber) {
            return unsafeCoerce(_727.value0);
        };
        if (_727 instanceof JBool) {
            return unsafeCoerce(_727.value0);
        };
        if (_727 instanceof JNull) {
            return jsNull;
        };
        throw new Error("Failed pattern match");
    };
    var valueToString = function (v) {
        return jsonStringify(valueToJSONImpl(v));
    };
    var valueToJSON = new ToJSON(Prelude.id(Prelude.categoryArr));
    var valueFromJSON = new FromJSON(Data_Either.Right.create);
    var toJSON = function (dict) {
        return dict.toJSON;
    };
    var $dot$eq = function (__dict_ToJSON_643) {
        return function (name) {
            return function (value) {
                return new Data_Tuple.Tuple(name, toJSON(__dict_ToJSON_643)(value));
            };
        };
    };
    var stringToJSON = new ToJSON(JString.create);
    var showValue = new Prelude.Show(function (_728) {
        if (_728 instanceof JObject) {
            return "JObject " + Prelude.show(Data_Map.showMap(Prelude.showString)(showValue))(_728.value0);
        };
        if (_728 instanceof JArray) {
            return "JArray " + Prelude.show(Prelude.showArray(showValue))(_728.value0);
        };
        if (_728 instanceof JString) {
            return "JString " + Prelude.show(Prelude.showString)(_728.value0);
        };
        if (_728 instanceof JNumber) {
            return "JNumber " + Prelude.show(Prelude.showNumber)(_728.value0);
        };
        if (_728 instanceof JBool) {
            return "JBool " + Prelude.show(Prelude.showBoolean)(_728.value0);
        };
        if (_728 instanceof JNull) {
            return "JNull";
        };
        throw new Error("Failed pattern match");
    });
    var setToJSON = function (__dict_ToJSON_644) {
        return new ToJSON(function (s) {
            return JArray.create(Prelude["<$>"](Data_Array.functorArray)(toJSON(__dict_ToJSON_644))(Data_Set.toList(s)));
        });
    };
    var parseJSON = function (dict) {
        return dict.parseJSON;
    };
    var $dot$colon = function (__dict_FromJSON_647) {
        return function (obj) {
            return function (key) {
                var _1574 = Data_Map.lookup(Prelude.ordString)(key)(obj);
                if (_1574 instanceof Data_Maybe.Nothing) {
                    return Data_Either.Left.create("key " + (Prelude.show(Prelude.showString)(key) + " not present"));
                };
                if (_1574 instanceof Data_Maybe.Just) {
                    return parseJSON(__dict_FromJSON_647)(_1574.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var object = function (ps) {
        return JObject.create(Data_Map.fromList(Prelude.ordString)(ps));
    };
    var numberToJSON = new ToJSON(JNumber.create);
    var jsonToValue = function (s) {
        var insert$prime = Data_Map.insert(Prelude.ordString);
        var ctors = {
            "null": JNull.value, 
            number: JNumber.create, 
            bool: JBool.create, 
            string: JString.create, 
            array: JArray.create, 
            object: JObject.create
        };
        var auxes = {
            left: Data_Either.Left.create, 
            right: Data_Either.Right.create, 
            either: Data_Either.either, 
            insert: insert$prime, 
            empty: Data_Map.empty
        };
        return jsonParseImpl(Data_Either.Left.create, jsonToValueImpl(auxes, ctors), s);
    };
    var fail = Data_Either.Left.create;
    var numberFromJSON = new FromJSON(function (i) {
        if (i instanceof JNumber) {
            return Prelude["return"](Data_Either.monadEither)(i.value0);
        };
        return fail(Prelude.show(showValue)(i) + " is not Number.");
    });
    var stringFromJSON = new FromJSON(function (i) {
        if (i instanceof JString) {
            return Prelude["return"](Data_Either.monadEither)(i.value0);
        };
        return fail(Prelude.show(showValue)(i) + " is not String.");
    });
    var encode = function (__dict_ToJSON_655) {
        return function (a) {
            return valueToString(toJSON(__dict_ToJSON_655)(a));
        };
    };
    var eitherDecode = function (__dict_FromJSON_660) {
        return function (s) {
            return Prelude[">>="](Data_Either.bindEither)(jsonToValue(s))(function (_42) {
                return parseJSON(__dict_FromJSON_660)(_42);
            });
        };
    };
    var arrayFromJSON = function (__dict_FromJSON_663) {
        return new FromJSON(function (i) {
            if (i instanceof JArray) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Prelude["<$>"](Data_Array.functorArray)(parseJSON(__dict_FromJSON_663))(i.value0));
            };
            return fail(Prelude.show(showValue)(i) + " is not [a].");
        });
    };
    var setFromJSON = function (__dict_Ord_645) {
        return function (__dict_FromJSON_646) {
            return new FromJSON(function (a) {
                return Prelude["<$>"](Data_Either.functorEither)(Data_Set.fromList(__dict_Ord_645))(parseJSON(arrayFromJSON(__dict_FromJSON_646))(a));
            });
        };
    };
    return {
        JObject: JObject, 
        JArray: JArray, 
        JString: JString, 
        JNumber: JNumber, 
        JBool: JBool, 
        JNull: JNull, 
        ToJSON: ToJSON, 
        FromJSON: FromJSON, 
        object: object, 
        ".=": $dot$eq, 
        encode: encode, 
        toJSON: toJSON, 
        ".:": $dot$colon, 
        eitherDecode: eitherDecode, 
        fail: fail, 
        parseJSON: parseJSON, 
        showValue: showValue, 
        valueFromJSON: valueFromJSON, 
        numberFromJSON: numberFromJSON, 
        stringFromJSON: stringFromJSON, 
        arrayFromJSON: arrayFromJSON, 
        setFromJSON: setFromJSON, 
        numberToJSON: numberToJSON, 
        stringToJSON: stringToJSON, 
        setToJSON: setToJSON, 
        valueToJSON: valueToJSON
    };
})();
var PS = PS || {};
PS.Data_Unfoldable = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Array_ST = PS.Data_Array_ST;
    var Prelude = PS.Prelude;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Unfoldable = function (unfoldr) {
        this.unfoldr = unfoldr;
    };
    var unfoldr = function (dict) {
        return dict.unfoldr;
    };
    var unfoldableArray = new Unfoldable(function (f) {
        return function (b) {
            return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
                var _49 = Data_Array_ST.emptySTArray();
                var _48 = Control_Monad_ST.newSTRef(b)();
                (function () {
                    while (!(function __do() {
                        var _47 = Control_Monad_ST.readSTRef(_48)();
                        return (function () {
                            var _1586 = f(_47);
                            if (_1586 instanceof Data_Maybe.Nothing) {
                                return Prelude["return"](Control_Monad_Eff.monadEff)(true);
                            };
                            if (_1586 instanceof Data_Maybe.Just) {
                                return function __do() {
                                    Data_Array_ST.pushSTArray(_49)(_1586.value0.value0)();
                                    Control_Monad_ST.writeSTRef(_48)(_1586.value0.value1)();
                                    return false;
                                };
                            };
                            throw new Error("Failed pattern match");
                        })()();
                    })()) {

                    };
                    return {};
                })();
                return _49;
            }));
        };
    });
    return {
        Unfoldable: Unfoldable, 
        unfoldr: unfoldr, 
        unfoldableArray: unfoldableArray
    };
})();
var PS = PS || {};
PS.Control_Monad_ListT = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Unfoldable = PS.Data_Unfoldable;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Monad = PS.Control_Monad;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Yield = (function () {
        function Yield(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Yield.create = function (value0) {
            return function (value1) {
                return new Yield(value0, value1);
            };
        };
        return Yield;
    })();
    var Skip = (function () {
        function Skip(value0) {
            this.value0 = value0;
        };
        Skip.create = function (value0) {
            return new Skip(value0);
        };
        return Skip;
    })();
    var Done = (function () {
        function Done() {

        };
        Done.value = new Done();
        return Done;
    })();
    var ListT = (function () {
        function ListT(value0) {
            this.value0 = value0;
        };
        ListT.create = function (value0) {
            return new ListT(value0);
        };
        return ListT;
    })();
    var wrapEffect = function (__dict_Monad_684) {
        return function (v) {
            return ListT.create(Prelude["<$>"](((__dict_Monad_684["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Skip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Lazy.defer)(Prelude["const"])))(v));
        };
    };
    var runListT = function (_749) {
        return _749.value0;
    };
    var stepMap = function (__dict_Functor_687) {
        return function (f) {
            return function (l) {
                return ListT.create(Prelude["<$>"](__dict_Functor_687)(f)(runListT(l)));
            };
        };
    };
    var uncons = function (__dict_Monad_689) {
        return function (l) {
            var g = function (_759) {
                if (_759 instanceof Yield) {
                    return Prelude.pure(__dict_Monad_689["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Just.create(new Data_Tuple.Tuple(_759.value0, Data_Lazy.force(_759.value1))));
                };
                if (_759 instanceof Skip) {
                    return uncons(__dict_Monad_689)(Data_Lazy.force(_759.value0));
                };
                if (_759 instanceof Done) {
                    return Prelude.pure(__dict_Monad_689["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
                };
                throw new Error("Failed pattern match");
            };
            return Prelude[">>="](__dict_Monad_689["__superclass_Prelude.Bind_1"]())(runListT(l))(g);
        };
    };
    var prepend$prime = function (__dict_Applicative_691) {
        return function (h) {
            return function (t) {
                return ListT.create(Prelude.pure(__dict_Applicative_691)(new Yield(h, t)));
            };
        };
    };
    var prepend = function (__dict_Applicative_692) {
        return function (h) {
            return function (t) {
                return prepend$prime(__dict_Applicative_692)(h)(Data_Lazy.defer(Prelude["const"](t)));
            };
        };
    };
    var nil = function (__dict_Applicative_693) {
        return ListT.create(Prelude.pure(__dict_Applicative_693)(Done.value));
    };
    var singleton = function (__dict_Applicative_695) {
        return function (a) {
            return prepend(__dict_Applicative_695)(a)(nil(__dict_Applicative_695));
        };
    };
    var zipWith$prime = function (__dict_Monad_697) {
        return function (f) {
            var loop = function (fa) {
                return function (fb) {
                    var g = function (_764) {
                        return function (_765) {
                            if (_765 instanceof Data_Maybe.Nothing) {
                                return Prelude.pure(__dict_Monad_697["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_697["__superclass_Prelude.Applicative_0"]()));
                            };
                            if (_764 instanceof Data_Maybe.Nothing) {
                                return Prelude.pure(__dict_Monad_697["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_697["__superclass_Prelude.Applicative_0"]()));
                            };
                            if (_764 instanceof Data_Maybe.Just && _765 instanceof Data_Maybe.Just) {
                                return Prelude["<$>"](((__dict_Monad_697["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(prepend$prime(__dict_Monad_697["__superclass_Prelude.Applicative_0"]()))(Data_Lazy.defer(function (_747) {
                                    return zipWith$prime(__dict_Monad_697)(f)(_764.value0.value1)(_765.value0.value1);
                                })))(f(_764.value0.value0)(_765.value0.value0));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return wrapEffect(__dict_Monad_697)(Prelude[">>="](__dict_Monad_697["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_697)(fa))(function (_51) {
                        return Prelude[">>="](__dict_Monad_697["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_697)(fb))(function (_50) {
                            return g(_51)(_50);
                        });
                    }));
                };
            };
            return loop;
        };
    };
    var zipWith = function (__dict_Monad_698) {
        return function (f) {
            var g = function (a) {
                return function (b) {
                    return Prelude.pure(__dict_Monad_698["__superclass_Prelude.Applicative_0"]())(f(a)(b));
                };
            };
            return zipWith$prime(__dict_Monad_698)(g);
        };
    };
    var functorListT = function (__dict_Functor_706) {
        return new Prelude.Functor(function (f) {
            var g = function (_766) {
                if (_766 instanceof Yield) {
                    return new Yield(f(_766.value0), Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_706))(f))(_766.value1));
                };
                if (_766 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_706))(f))(_766.value0));
                };
                if (_766 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap(__dict_Functor_706)(g);
        });
    };
    var fromEffect = function (__dict_Applicative_707) {
        return function (fa) {
            return ListT.create(Prelude["<$>"]((__dict_Applicative_707["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(Yield.create)(Data_Lazy.defer(function (_745) {
                return nil(__dict_Applicative_707);
            })))(fa));
        };
    };
    var monadTransListT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_708) {
        return fromEffect(__dict_Monad_708["__superclass_Prelude.Applicative_0"]());
    });
    var semigroupListT = function (__dict_Applicative_719) {
        return new Prelude.Semigroup(concat(__dict_Applicative_719));
    };
    var concat = function (__dict_Applicative_718) {
        return function (x) {
            return function (y) {
                var f = function (_751) {
                    if (_751 instanceof Yield) {
                        return new Yield(_751.value0, Prelude["<$>"](Data_Lazy.functorLazy)(Prelude.flip(Prelude["<>"](semigroupListT(__dict_Applicative_718)))(y))(_751.value1));
                    };
                    if (_751 instanceof Skip) {
                        return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(Prelude.flip(Prelude["<>"](semigroupListT(__dict_Applicative_718)))(y))(_751.value0));
                    };
                    if (_751 instanceof Done) {
                        return new Skip(Data_Lazy.defer(Prelude["const"](y)));
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap((__dict_Applicative_718["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(x);
            };
        };
    };
    var applyListT = function (__dict_Monad_722) {
        return new Prelude.Apply((function () {
            var g = function (f) {
                return function (x) {
                    return f(x);
                };
            };
            return zipWith(__dict_Monad_722)(g);
        })(), function () {
            return functorListT(((__dict_Monad_722["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var applicativeListT = function (__dict_Monad_723) {
        return new Prelude.Applicative(function () {
            return applyListT(__dict_Monad_723);
        }, singleton(__dict_Monad_723["__superclass_Prelude.Applicative_0"]()));
    };
    var altListT = function (__dict_Applicative_725) {
        return new Control_Alt.Alt(concat(__dict_Applicative_725), function () {
            return functorListT((__dict_Applicative_725["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusListT = function (__dict_Monad_694) {
        return new Control_Plus.Plus(function () {
            return altListT(__dict_Monad_694["__superclass_Prelude.Applicative_0"]());
        }, nil(__dict_Monad_694["__superclass_Prelude.Applicative_0"]()));
    };
    return {
        "zipWith'": zipWith$prime, 
        zipWith: zipWith, 
        wrapEffect: wrapEffect, 
        uncons: uncons, 
        singleton: singleton, 
        "prepend'": prepend$prime, 
        prepend: prepend, 
        nil: nil, 
        fromEffect: fromEffect, 
        semigroupListT: semigroupListT, 
        functorListT: functorListT, 
        applyListT: applyListT, 
        applicativeListT: applicativeListT, 
        monadTransListT: monadTransListT, 
        altListT: altListT, 
        plusListT: plusListT
    };
})();
var PS = PS || {};
PS.Data_Enum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Unfoldable = PS.Data_Unfoldable;
    var Data_Char = PS.Data_Char;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Cardinality = function (x) {
        return x;
    };
    var Enum = function (__superclass_Prelude$dotOrd_0, cardinality, firstEnum, fromEnum, lastEnum, pred, succ, toEnum) {
        this["__superclass_Prelude.Ord_0"] = __superclass_Prelude$dotOrd_0;
        this.cardinality = cardinality;
        this.firstEnum = firstEnum;
        this.fromEnum = fromEnum;
        this.lastEnum = lastEnum;
        this.pred = pred;
        this.succ = succ;
        this.toEnum = toEnum;
    };
    var toEnum = function (dict) {
        return dict.toEnum;
    };
    var intStepFromTo = function (step) {
        return function (from) {
            return function (to) {
                return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                    var _1616 = e <= to;
                    if (_1616) {
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step));
                    };
                    if (!_1616) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match");
                })(from);
            };
        };
    };
    var intFromTo = intStepFromTo(1);
    var fromEnum = function (dict) {
        return dict.fromEnum;
    };
    var enumFromTo = function (__dict_Enum_732) {
        return function (a) {
            return function (b) {
                var b$prime = fromEnum(__dict_Enum_732)(b);
                var a$prime = fromEnum(__dict_Enum_732)(a);
                return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_732))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
            };
        };
    };
    var defaultSucc = function (toEnum$prime) {
        return function (fromEnum$prime) {
            return function (a) {
                return toEnum$prime(fromEnum$prime(a) + 1);
            };
        };
    };
    var defaultPred = function (toEnum$prime) {
        return function (fromEnum$prime) {
            return function (a) {
                return toEnum$prime(fromEnum$prime(a) - 1);
            };
        };
    };
    return {
        Cardinality: Cardinality, 
        Enum: Enum, 
        enumFromTo: enumFromTo, 
        intStepFromTo: intStepFromTo, 
        intFromTo: intFromTo, 
        defaultPred: defaultPred, 
        defaultSucc: defaultSucc, 
        toEnum: toEnum, 
        fromEnum: fromEnum
    };
})();
var PS = PS || {};
PS.Data_Date = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Global = PS.Global;
    var Data_Function = PS.Data_Function;
    var Data_Enum = PS.Data_Enum;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Int = PS.Data_Int;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Time = PS.Data_Time;
    
  function nowImpl(ctor) {
    return function(){
      return ctor(new Date());
    };
  }
  ;
    var Sunday = (function () {
        function Sunday() {

        };
        Sunday.value = new Sunday();
        return Sunday;
    })();
    var Monday = (function () {
        function Monday() {

        };
        Monday.value = new Monday();
        return Monday;
    })();
    var Tuesday = (function () {
        function Tuesday() {

        };
        Tuesday.value = new Tuesday();
        return Tuesday;
    })();
    var Wednesday = (function () {
        function Wednesday() {

        };
        Wednesday.value = new Wednesday();
        return Wednesday;
    })();
    var Thursday = (function () {
        function Thursday() {

        };
        Thursday.value = new Thursday();
        return Thursday;
    })();
    var Friday = (function () {
        function Friday() {

        };
        Friday.value = new Friday();
        return Friday;
    })();
    var Saturday = (function () {
        function Saturday() {

        };
        Saturday.value = new Saturday();
        return Saturday;
    })();
    var DateTime = function (x) {
        return x;
    };
    var showDayOfWeek = new Prelude.Show(function (_812) {
        if (_812 instanceof Sunday) {
            return "Sunday";
        };
        if (_812 instanceof Monday) {
            return "Monday";
        };
        if (_812 instanceof Tuesday) {
            return "Tuesday";
        };
        if (_812 instanceof Wednesday) {
            return "Wednesday";
        };
        if (_812 instanceof Thursday) {
            return "Thursday";
        };
        if (_812 instanceof Friday) {
            return "Friday";
        };
        if (_812 instanceof Saturday) {
            return "Saturday";
        };
        throw new Error("Failed pattern match");
    });
    var now = nowImpl(DateTime);
    var eqDayOfWeek = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqDayOfWeek)(a)(b);
        };
    }, function (_810) {
        return function (_811) {
            if (_810 instanceof Sunday && _811 instanceof Sunday) {
                return true;
            };
            if (_810 instanceof Monday && _811 instanceof Monday) {
                return true;
            };
            if (_810 instanceof Tuesday && _811 instanceof Tuesday) {
                return true;
            };
            if (_810 instanceof Wednesday && _811 instanceof Wednesday) {
                return true;
            };
            if (_810 instanceof Thursday && _811 instanceof Thursday) {
                return true;
            };
            if (_810 instanceof Friday && _811 instanceof Friday) {
                return true;
            };
            if (_810 instanceof Saturday && _811 instanceof Saturday) {
                return true;
            };
            return false;
        };
    });
    var dayOfWeekToEnum = function (_786) {
        if (_786 === 0) {
            return new Data_Maybe.Just(Sunday.value);
        };
        if (_786 === 1) {
            return new Data_Maybe.Just(Monday.value);
        };
        if (_786 === 2) {
            return new Data_Maybe.Just(Tuesday.value);
        };
        if (_786 === 3) {
            return new Data_Maybe.Just(Wednesday.value);
        };
        if (_786 === 4) {
            return new Data_Maybe.Just(Thursday.value);
        };
        if (_786 === 5) {
            return new Data_Maybe.Just(Friday.value);
        };
        if (_786 === 6) {
            return new Data_Maybe.Just(Saturday.value);
        };
        return Data_Maybe.Nothing.value;
    };
    var dayOfWeekFromEnum = function (_787) {
        if (_787 instanceof Sunday) {
            return 0;
        };
        if (_787 instanceof Monday) {
            return 1;
        };
        if (_787 instanceof Tuesday) {
            return 2;
        };
        if (_787 instanceof Wednesday) {
            return 3;
        };
        if (_787 instanceof Thursday) {
            return 4;
        };
        if (_787 instanceof Friday) {
            return 5;
        };
        if (_787 instanceof Saturday) {
            return 6;
        };
        throw new Error("Failed pattern match");
    };
    var enumDayOfWeek = new Data_Enum.Enum(function () {
        return ordDayOfWeek;
    }, 7, Sunday.value, dayOfWeekFromEnum, Saturday.value, Data_Enum.defaultPred(dayOfWeekToEnum)(dayOfWeekFromEnum), Data_Enum.defaultSucc(dayOfWeekToEnum)(dayOfWeekFromEnum), dayOfWeekToEnum);
    var ordDayOfWeek = new Prelude.Ord(function () {
        return eqDayOfWeek;
    }, Data_Function.on(Prelude.compare(Prelude.ordNumber))(Data_Enum.fromEnum(enumDayOfWeek)));
    return {
        Sunday: Sunday, 
        Monday: Monday, 
        Tuesday: Tuesday, 
        Wednesday: Wednesday, 
        Thursday: Thursday, 
        Friday: Friday, 
        Saturday: Saturday, 
        now: now, 
        eqDayOfWeek: eqDayOfWeek, 
        ordDayOfWeek: ordDayOfWeek, 
        showDayOfWeek: showDayOfWeek, 
        enumDayOfWeek: enumDayOfWeek
    };
})();
var PS = PS || {};
PS.Data_Date_Locale = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Date = PS.Data_Date;
    var Data_Function = PS.Data_Function;
    var Data_Enum = PS.Data_Enum;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Int = PS.Data_Int;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Time = PS.Data_Time;
    
  function dateMethod(method, date) {
    return function () {
      return date[method]();
    };
  }
  ;
    var minuteOfHour = function (d) {
        return dateMethod("getMinutes", d);
    };
    var hourOfDay = function (d) {
        return dateMethod("getHours", d);
    };
    var dayOfWeek = function (d) {
        return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Enum.toEnum(Data_Date.enumDayOfWeek)))(dateMethod("getDay", d));
    };
    return {
        minuteOfHour: minuteOfHour, 
        hourOfDay: hourOfDay, 
        dayOfWeek: dayOfWeek
    };
})();
var PS = PS || {};
PS.Halogen_HTML_Events_Handler = (function () {
    "use strict";
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Prelude = PS.Prelude;
    var Control_Monad_Writer = PS.Control_Monad_Writer;
    var Control_Apply = PS.Control_Apply;
    var Data_Foldable = PS.Data_Foldable;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Halogen_HTML_Events_Types = PS.Halogen_HTML_Events_Types;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Identity = PS.Data_Identity;
    function preventDefaultImpl(e) {  return function() {    e.preventDefault();  };};
    function stopPropagationImpl(e) {  return function() {    e.stopPropagation();  };};
    function stopImmediatePropagationImpl(e) {  return function() {    e.stopImmediatePropagation();  };};
    var PreventDefault = (function () {
        function PreventDefault() {

        };
        PreventDefault.value = new PreventDefault();
        return PreventDefault;
    })();
    var StopPropagation = (function () {
        function StopPropagation() {

        };
        StopPropagation.value = new StopPropagation();
        return StopPropagation;
    })();
    var StopImmediatePropagation = (function () {
        function StopImmediatePropagation() {

        };
        StopImmediatePropagation.value = new StopImmediatePropagation();
        return StopImmediatePropagation;
    })();
    var EventHandler = function (x) {
        return x;
    };
    var runEventHandler = function (e) {
        return function (_862) {
            var applyUpdate = function (_867) {
                if (_867 instanceof PreventDefault) {
                    return preventDefaultImpl(e);
                };
                if (_867 instanceof StopPropagation) {
                    return stopPropagationImpl(e);
                };
                if (_867 instanceof StopImmediatePropagation) {
                    return stopImmediatePropagationImpl(e);
                };
                throw new Error("Failed pattern match");
            };
            var _1625 = Control_Monad_Writer.runWriter(_862);
            return Control_Apply["*>"](Control_Monad_Eff.applyEff)(Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(_1625.value1)(applyUpdate))(Prelude["return"](Control_Monad_Eff.monadEff)(_1625.value0));
        };
    };
    var functorEventHandler = new Prelude.Functor(function (f) {
        return function (_863) {
            return Prelude["<$>"](Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(_863);
        };
    });
    var applyEventHandler = new Prelude.Apply(function (_864) {
        return function (_865) {
            return Prelude["<*>"](Control_Monad_Writer_Trans.applyWriterT(Data_Monoid.monoidArray)(Data_Identity.applyIdentity))(_864)(_865);
        };
    }, function () {
        return functorEventHandler;
    });
    var applicativeEventHandler = new Prelude.Applicative(function () {
        return applyEventHandler;
    }, Prelude["<<<"](Prelude.semigroupoidArr)(EventHandler)(Prelude.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))));
    return {
        runEventHandler: runEventHandler, 
        functorEventHandler: functorEventHandler, 
        applyEventHandler: applyEventHandler, 
        applicativeEventHandler: applicativeEventHandler
    };
})();
var PS = PS || {};
PS.Halogen_Internal_VirtualDOM = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Nullable = PS.Data_Nullable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var emptyProps = {};
    function prop(key, value) {  var props = {};  props[key] = value;  return props;};
    function handlerProp(key, f, props) {  var props = {};  var Hook = function () {};  Hook.prototype.callback = function(e) {    f(e)();  };  Hook.prototype.hook = function(node) {    node.addEventListener(key, this.callback);  };  Hook.prototype.unhook = function(node) {    node.removeEventListener(key, this.callback);  };  props['data-halogen-hook-' + key] = new Hook(f);  return props;};
    function concatProps(p1, p2) {  var props = {};  for (var key in p1) {    if (p1.hasOwnProperty(key)) {      props[key] = p1[key];    }  }  for (var key in p2) {    if (p2.hasOwnProperty(key)) {      props[key] = p2[key];    }  }  return props;};
    function createElement(vtree) {  return require('virtual-dom/create-element')(vtree);};
    function diff(vtree1) {  return function createElement(vtree2) {    return require('virtual-dom/diff')(vtree1, vtree2);  };};
    function patch(p) {  return function(node) {    return function() {      return require('virtual-dom/patch')(node, p);    };  };};
    function vtext(s) {  var VText = require('virtual-dom/vnode/vtext');  return new VText(s);};
    function vnode(name) {  return function(props) {    return function(children) {      var VirtualNode = require('virtual-dom/vnode/vnode');      return new VirtualNode(name, props, children);    };  };};
    function vwidget(driver) {  return function(w) {    return w.create(driver);  };};
    function mapWidget(f) {  return function(w) {    return {      create: function(driver) {        return w.create(function(i) {          return driver(f(i));        });      }    };  };};
    var semigroupProps = new Prelude.Semigroup(Data_Function.runFn2(concatProps));
    var monoidProps = new Data_Monoid.Monoid(function () {
        return semigroupProps;
    }, emptyProps);
    var functorWidget = new Prelude.Functor(mapWidget);
    return {
        vwidget: vwidget, 
        vnode: vnode, 
        vtext: vtext, 
        patch: patch, 
        diff: diff, 
        createElement: createElement, 
        handlerProp: handlerProp, 
        prop: prop, 
        emptyProps: emptyProps, 
        semigroupProps: semigroupProps, 
        monoidProps: monoidProps, 
        functorWidget: functorWidget
    };
})();
var PS = PS || {};
PS.Halogen_HTML_Attributes = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Exists = PS.Data_Exists;
    var Data_String = PS.Data_String;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Array = PS.Data_Array;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Halogen_Internal_VirtualDOM = PS.Halogen_Internal_VirtualDOM;
    var Halogen_HTML_Events_Types = PS.Halogen_HTML_Events_Types;
    var Halogen_HTML_Events_Handler = PS.Halogen_HTML_Events_Handler;
    function unsafeCoerce(x) {  return x;};
    var EventName = function (x) {
        return x;
    };
    var HandlerF = (function () {
        function HandlerF(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        HandlerF.create = function (value0) {
            return function (value1) {
                return new HandlerF(value0, value1);
            };
        };
        return HandlerF;
    })();
    var ClassName = function (x) {
        return x;
    };
    var AttributeName = function (x) {
        return x;
    };
    var AttrF = (function () {
        function AttrF(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        AttrF.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new AttrF(value0, value1, value2);
                };
            };
        };
        return AttrF;
    })();
    var Attr = (function () {
        function Attr(value0) {
            this.value0 = value0;
        };
        Attr.create = function (value0) {
            return new Attr(value0);
        };
        return Attr;
    })();
    var Handler = (function () {
        function Handler(value0) {
            this.value0 = value0;
        };
        Handler.create = function (value0) {
            return new Handler(value0);
        };
        return Handler;
    })();
    var IsAttribute = function (toAttrString) {
        this.toAttrString = toAttrString;
    };
    var toAttrString = function (dict) {
        return dict.toAttrString;
    };
    var stringIsAttribute = new IsAttribute(function (_875) {
        return function (s) {
            return s;
        };
    });
    var runExistsR = unsafeCoerce;
    var runEventName = function (_872) {
        return _872;
    };
    var runClassName = function (_870) {
        return _870;
    };
    var runAttributeName = function (_871) {
        return _871;
    };
    var mkExistsR = unsafeCoerce;
    var handler = function (name) {
        return function (k) {
            return new Handler(mkExistsR(new HandlerF(name, k)));
        };
    };
    var eventName = EventName;
    var className = ClassName;
    var booleanIsAttribute = new IsAttribute(function (name) {
        return function (_877) {
            if (_877) {
                return runAttributeName(name);
            };
            if (!_877) {
                return "";
            };
            throw new Error("Failed pattern match");
        };
    });
    var attributeName = AttributeName;
    var attr = function (__dict_IsAttribute_761) {
        return function (name) {
            return function (v) {
                return new Attr(Data_Exists.mkExists(new AttrF(toAttrString(__dict_IsAttribute_761), name, v)));
            };
        };
    };
    var checked = attr(booleanIsAttribute)(attributeName("checked"));
    var classes = function (ss) {
        return attr(stringIsAttribute)(attributeName("className"))(Data_String.joinWith(" ")(Data_Array.map(runClassName)(ss)));
    };
    var disabled = attr(booleanIsAttribute)(attributeName("disabled"));
    var $$for = attr(stringIsAttribute)(attributeName("for"));
    var href = attr(stringIsAttribute)(attributeName("href"));
    var id_ = attr(stringIsAttribute)(attributeName("id"));
    var functorAttr = new Prelude.Functor(function (f) {
        return function (_874) {
            if (_874 instanceof Attr) {
                return new Attr(_874.value0);
            };
            if (_874 instanceof Handler) {
                return runExistsR(function (_868) {
                    return new Handler(mkExistsR(new HandlerF(_868.value0, function (e_2) {
                        return Prelude["<$>"](Halogen_HTML_Events_Handler.functorEventHandler)(f)(_868.value1(e_2));
                    })));
                })(_874.value0);
            };
            throw new Error("Failed pattern match");
        };
    });
    var selected = attr(booleanIsAttribute)(attributeName("selected"));
    var type_ = attr(stringIsAttribute)(attributeName("type"));
    var value = attr(stringIsAttribute)(attributeName("value"));
    return {
        Attr: Attr, 
        Handler: Handler, 
        HandlerF: HandlerF, 
        AttrF: AttrF, 
        IsAttribute: IsAttribute, 
        selected: selected, 
        checked: checked, 
        disabled: disabled, 
        value: value, 
        type_: type_, 
        id_: id_, 
        href: href, 
        "for": $$for, 
        classes: classes, 
        handler: handler, 
        attr: attr, 
        runExistsR: runExistsR, 
        mkExistsR: mkExistsR, 
        toAttrString: toAttrString, 
        runEventName: runEventName, 
        eventName: eventName, 
        runAttributeName: runAttributeName, 
        attributeName: attributeName, 
        runClassName: runClassName, 
        className: className, 
        functorAttr: functorAttr, 
        stringIsAttribute: stringIsAttribute, 
        booleanIsAttribute: booleanIsAttribute
    };
})();
var PS = PS || {};
PS.Halogen_HTML = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Void = PS.Data_Void;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Function = PS.Data_Function;
    var Data_StrMap = PS.Data_StrMap;
    var Data_String = PS.Data_String;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Halogen_Internal_VirtualDOM = PS.Halogen_Internal_VirtualDOM;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Data_Array = PS.Data_Array;
    var TagName = function (x) {
        return x;
    };
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var Element = (function () {
        function Element(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new Element(value0, value1, value2);
                };
            };
        };
        return Element;
    })();
    var Placeholder = (function () {
        function Placeholder(value0) {
            this.value0 = value0;
        };
        Placeholder.create = function (value0) {
            return new Placeholder(value0);
        };
        return Placeholder;
    })();
    var text = Text.create;
    var tagName = TagName;
    var element = Element.create;
    var form = function (xs) {
        return element(tagName("form"))(xs);
    };
    var h1 = function (xs) {
        return element(tagName("h1"))(xs);
    };
    var input = function (xs) {
        return element(tagName("input"))(xs);
    };
    var label = function (xs) {
        return element(tagName("label"))(xs);
    };
    var label_ = label(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var li = function (xs) {
        return element(tagName("li"))(xs);
    };
    var li_ = li(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var option = function (xs) {
        return element(tagName("option"))(xs);
    };
    var p = function (xs) {
        return element(tagName("p"))(xs);
    };
    var p_ = p(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var runTagName = function (_880) {
        return _880;
    };
    var select = function (xs) {
        return element(tagName("select"))(xs);
    };
    var span = function (xs) {
        return element(tagName("span"))(xs);
    };
    var span_ = span(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var strong = function (xs) {
        return element(tagName("strong"))(xs);
    };
    var strong_ = strong(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var table = function (xs) {
        return element(tagName("table"))(xs);
    };
    var tbody = function (xs) {
        return element(tagName("tbody"))(xs);
    };
    var tbody_ = tbody(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var td = function (xs) {
        return element(tagName("td"))(xs);
    };
    var td_ = td(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var th = function (xs) {
        return element(tagName("th"))(xs);
    };
    var th_ = th(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var thead = function (xs) {
        return element(tagName("thead"))(xs);
    };
    var thead_ = thead(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var tr = function (xs) {
        return element(tagName("tr"))(xs);
    };
    var tr_ = tr(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var ul = function (xs) {
        return element(tagName("ul"))(xs);
    };
    var div = function (xs) {
        return element(tagName("div"))(xs);
    };
    var div_ = div(Data_Monoid.mempty(Data_Monoid.monoidArray));
    var button = function (xs) {
        return element(tagName("button"))(xs);
    };
    var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            var go = function (_882) {
                if (_882 instanceof Text) {
                    return new Text(_882.value0);
                };
                if (_882 instanceof Element) {
                    return new Element(_882.value0, Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"](Halogen_HTML_Attributes.functorAttr)(g))(_882.value1), Prelude["<$>"](Data_Array.functorArray)(go)(_882.value2));
                };
                if (_882 instanceof Placeholder) {
                    return new Placeholder(f(_882.value0));
                };
                throw new Error("Failed pattern match");
            };
            return go;
        };
    });
    var a = function (xs) {
        return element(tagName("a"))(xs);
    };
    return {
        Text: Text, 
        Element: Element, 
        Placeholder: Placeholder, 
        ul: ul, 
        tr_: tr_, 
        tr: tr, 
        thead_: thead_, 
        thead: thead, 
        th_: th_, 
        th: th, 
        td_: td_, 
        td: td, 
        tbody_: tbody_, 
        tbody: tbody, 
        table: table, 
        strong_: strong_, 
        strong: strong, 
        span_: span_, 
        span: span, 
        select: select, 
        p_: p_, 
        p: p, 
        option: option, 
        li_: li_, 
        li: li, 
        label_: label_, 
        label: label, 
        input: input, 
        h1: h1, 
        form: form, 
        div_: div_, 
        div: div, 
        button: button, 
        a: a, 
        runTagName: runTagName, 
        tagName: tagName, 
        element: element, 
        text: text, 
        bifunctorHTML: bifunctorHTML
    };
})();
var PS = PS || {};
PS.Halogen_HTML_Events = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Data_Maybe = PS.Data_Maybe;
    var Halogen_HTML_Events_Handler = PS.Halogen_HTML_Events_Handler;
    var Halogen_HTML_Events_Types = PS.Halogen_HTML_Events_Types;
    var onclick = Halogen_HTML_Attributes.handler(Halogen_HTML_Attributes.eventName("click"));
    var input = function (__dict_Applicative_762) {
        return function (f) {
            return function (e) {
                return Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Prelude.pure(__dict_Applicative_762)(f(e)));
            };
        };
    };
    return {
        onclick: onclick, 
        input: input
    };
})();
var PS = PS || {};
PS.Halogen_HTML_Events_Forms = (function () {
    "use strict";
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Data_Foreign = PS.Data_Foreign;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Alternative = PS.Control_Alternative;
    var Halogen_HTML_Events_Handler = PS.Halogen_HTML_Events_Handler;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var addForeignPropHandler = function (__dict_Alternative_763) {
        return function (__dict_IsForeign_764) {
            return function (key) {
                return function (prop) {
                    return function (f) {
                        var handler = function (e) {
                            var _1653 = Data_Foreign_Class.readProp(__dict_IsForeign_764)(Data_Foreign_Index.indexString)(prop)(e);
                            if (_1653 instanceof Data_Either.Left) {
                                return Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Control_Plus.empty(__dict_Alternative_763["__superclass_Control.Plus.Plus_1"]()));
                            };
                            if (_1653 instanceof Data_Either.Right) {
                                return f(_1653.value0);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Halogen_HTML_Attributes.handler(Halogen_HTML_Attributes.eventName(key))(function (e) {
                            return handler(Data_Foreign.toForeign(e.target));
                        });
                    };
                };
            };
        };
    };
    var onChecked = function (__dict_Alternative_765) {
        return addForeignPropHandler(__dict_Alternative_765)(Data_Foreign_Class.booleanIsForeign)("change")("checked");
    };
    var onInput = function (__dict_Alternative_766) {
        return function (__dict_IsForeign_767) {
            return addForeignPropHandler(__dict_Alternative_766)(__dict_IsForeign_767)("input")("value");
        };
    };
    var onValueChanged = function (__dict_Alternative_768) {
        return function (__dict_IsForeign_769) {
            return addForeignPropHandler(__dict_Alternative_768)(__dict_IsForeign_769)("change")("value");
        };
    };
    return {
        onInput: onInput, 
        onChecked: onChecked, 
        onValueChanged: onValueChanged
    };
})();
var PS = PS || {};
PS.Halogen_HTML_Renderer_VirtualDOM = (function () {
    "use strict";
    var Data_Exists = PS.Data_Exists;
    var Data_Function = PS.Data_Function;
    var Halogen_Internal_VirtualDOM = PS.Halogen_Internal_VirtualDOM;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Halogen_HTML_Events_Handler = PS.Halogen_HTML_Events_Handler;
    var Halogen_HTML = PS.Halogen_HTML;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Array = PS.Data_Array;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Halogen_HTML_Events_Types = PS.Halogen_HTML_Events_Types;
    var renderAttr = function (dr) {
        return function (_888) {
            if (_888 instanceof Halogen_HTML_Attributes.Attr) {
                return Data_Exists.runExists(function (_886) {
                    return Halogen_Internal_VirtualDOM.prop(Halogen_HTML_Attributes.runAttributeName(_886.value1), _886.value2);
                })(_888.value0);
            };
            if (_888 instanceof Halogen_HTML_Attributes.Handler) {
                return Halogen_HTML_Attributes.runExistsR(function (_887) {
                    return Halogen_Internal_VirtualDOM.handlerProp(Halogen_HTML_Attributes.runEventName(_887.value0), function (ev) {
                        return function __do() {
                            var _52 = Control_Monad_Eff_Unsafe.unsafeInterleaveEff(Halogen_HTML_Events_Handler.runEventHandler(ev)(_887.value1(ev)))();
                            return dr(_52)();
                        };
                    });
                })(_888.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
    var renderHTML = function (f) {
        return function (g) {
            var go = function (_889) {
                if (_889 instanceof Halogen_HTML.Text) {
                    return Halogen_Internal_VirtualDOM.vtext(_889.value0);
                };
                if (_889 instanceof Halogen_HTML.Placeholder) {
                    return Halogen_Internal_VirtualDOM.vwidget(f)(g(_889.value0));
                };
                if (_889 instanceof Halogen_HTML.Element) {
                    return Halogen_Internal_VirtualDOM.vnode(Halogen_HTML.runTagName(_889.value0))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Halogen_Internal_VirtualDOM.monoidProps)(renderAttr(f))(_889.value1))(Data_Array.map(go)(_889.value2));
                };
                throw new Error("Failed pattern match");
            };
            return go;
        };
    };
    return {
        renderHTML: renderHTML
    };
})();
var PS = PS || {};
PS.Halogen_Component = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Data_Void = PS.Data_Void;
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Exists = PS.Data_Exists;
    var Halogen_HTML_Widget = PS.Halogen_HTML_Widget;
    var Halogen_HTML = PS.Halogen_HTML;
    var Halogen_Signal = PS.Halogen_Signal;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Halogen_Internal_VirtualDOM = PS.Halogen_Internal_VirtualDOM;
    var ComponentF = function (x) {
        return x;
    };
    var Component = function (x) {
        return x;
    };
    var runComponent = function (f) {
        return function (_893) {
            return Data_Exists.runExists(function (_892) {
                return f(_892);
            })(_893);
        };
    };
    var component$prime = function (sf) {
        return Data_Exists.mkExists(sf);
    };
    var component = function (__dict_Functor_771) {
        return function (sf) {
            var f = Data_Either.either(Data_Void.absurd)(Prelude.id(Prelude.categoryArr));
            return component$prime(Data_Profunctor.dimap(Halogen_Signal.profunctorSF1)(f)(Data_Bifunctor.rmap(Halogen_HTML.bifunctorHTML)(Prelude["<$>"](__dict_Functor_771)(Data_Either.Right.create)))(sf));
        };
    };
    return {
        "component'": component$prime, 
        component: component, 
        runComponent: runComponent
    };
})();
var PS = PS || {};
PS.Network_HTTP_Affjax = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Aff = PS.Control_Monad_Aff;
    var Network_HTTP_Method = PS.Network_HTTP_Method;
    var Network_HTTP_RequestHeader = PS.Network_HTTP_RequestHeader;
    var Data_Nullable = PS.Data_Nullable;
    var Network_HTTP_Affjax_Request = PS.Network_HTTP_Affjax_Request;
    var Network_HTTP_Affjax_Response = PS.Network_HTTP_Affjax_Response;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Data_Function = PS.Data_Function;
    var Network_HTTP_ResponseHeader = PS.Network_HTTP_ResponseHeader;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Either = PS.Data_Either;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Maybe = PS.Data_Maybe;
    var DOM_XHR = PS.DOM_XHR;
    var Network_HTTP_StatusCode = PS.Network_HTTP_StatusCode;
    var Type_Proxy = PS.Type_Proxy;
    var Data_Array = PS.Data_Array;
    
  function _ajax (mkHeader, options, canceler, errback, callback) {
    return function () {
      var xhr = new XMLHttpRequest();
      xhr.open(options.method || "GET", options.url || "/", true, options.username, options.password);
      if (options.headers) {
        for (var i = 0, header; header = options.headers[i]; i++) {
          xhr.setRequestHeader(header.field, header.value);
        }
      }
      xhr.onerror = function (err) {
        errback(new Error("AJAX request failed: " + options.method + " " + options.url))();
      };
      xhr.onload = function () {
        callback({
          status: xhr.status,
          headers: xhr.getAllResponseHeaders().split("\n")
            .filter(function (header) {
              return header.length > 0;
            })
            .map(function (header) {
              var i = header.indexOf(":");
              return mkHeader(header.substring(0, i))(header.substring(i + 2));
            }),
          response: xhr.response
        })();
      };
      xhr.responseType = options.responseType;
      xhr.send(options.content);
      return canceler(xhr);
    };
  }
  ;
    
  function _cancelAjax (xhr, cancelError, errback, callback) {
    return function () {
      try { xhr.abort(); } catch (e) { return callback(false)(); }
      return callback(true)();
    };
  };
  ;
    var defaultRequest = {
        method: Network_HTTP_Method.GET.value, 
        url: "/", 
        headers: [  ], 
        content: Data_Maybe.Nothing.value, 
        username: Data_Maybe.Nothing.value, 
        password: Data_Maybe.Nothing.value
    };
    var cancelAjax = function (xhr) {
        return function (err) {
            return Control_Monad_Aff.makeAff(function (eb) {
                return function (cb) {
                    return _cancelAjax(xhr, err, eb, cb);
                };
            });
        };
    };
    var affjax$prime = function (__dict_Requestable_777) {
        return function (__dict_Respondable_778) {
            return function (req) {
                return function (eb) {
                    return function (cb) {
                        var req$prime = {
                            method: Network_HTTP_Method.methodToString(req.method), 
                            url: req.url, 
                            headers: Prelude["<$>"](Data_Array.functorArray)(function (h) {
                                return {
                                    field: Network_HTTP_RequestHeader.requestHeaderName(h), 
                                    value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                                };
                            })(req.headers), 
                            content: Data_Nullable.toNullable(Prelude["<$>"](Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(__dict_Requestable_777))(req.content)), 
                            responseType: Network_HTTP_Affjax_Response.responseTypeToString(Network_HTTP_Affjax_Response.responseType(__dict_Respondable_778)(Type_Proxy.Proxy.value)), 
                            username: Data_Nullable.toNullable(req.username), 
                            password: Data_Nullable.toNullable(req.password)
                        };
                        var cb$prime = function (res) {
                            var _1679 = Prelude["<$>"](Data_Either.functorEither)(function (_0) {
                                var _1677 = {};
                                for (var _1678 in res) {
                                    if (res.hasOwnProperty(_1678)) {
                                        _1677[_1678] = res[_1678];
                                    };
                                };
                                _1677.response = _0;
                                return _1677;
                            })(Network_HTTP_Affjax_Response.fromResponse(__dict_Respondable_778)(res.response));
                            if (_1679 instanceof Data_Either.Left) {
                                return eb(Control_Monad_Eff_Exception.error(Prelude.show(Data_Foreign.showForeignError)(_1679.value0)));
                            };
                            if (_1679 instanceof Data_Either.Right) {
                                return cb(_1679.value0);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return _ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime, cancelAjax, eb, cb$prime);
                    };
                };
            };
        };
    };
    var affjax = function (__dict_Requestable_779) {
        return function (__dict_Respondable_780) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Aff["makeAff'"])(affjax$prime(__dict_Requestable_779)(__dict_Respondable_780));
        };
    };
    var $$delete = function (__dict_Respondable_781) {
        return function (u) {
            return affjax(Network_HTTP_Affjax_Request.requestableUnit)(__dict_Respondable_781)((function () {
                var _1682 = {};
                for (var _1683 in defaultRequest) {
                    if (defaultRequest.hasOwnProperty(_1683)) {
                        _1682[_1683] = defaultRequest[_1683];
                    };
                };
                _1682.method = Network_HTTP_Method.DELETE.value;
                _1682.url = u;
                return _1682;
            })());
        };
    };
    var delete_ = $$delete(Network_HTTP_Affjax_Response.responsableUnit);
    var get = function (__dict_Respondable_782) {
        return function (u) {
            return affjax(Network_HTTP_Affjax_Request.requestableUnit)(__dict_Respondable_782)((function () {
                var _1684 = {};
                for (var _1685 in defaultRequest) {
                    if (defaultRequest.hasOwnProperty(_1685)) {
                        _1684[_1685] = defaultRequest[_1685];
                    };
                };
                _1684.url = u;
                return _1684;
            })());
        };
    };
    return {
        delete_: delete_, 
        "delete": $$delete, 
        get: get, 
        "affjax'": affjax$prime, 
        affjax: affjax, 
        defaultRequest: defaultRequest
    };
})();
var PS = PS || {};
PS.Optic_Setter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Functor_Contravariant = PS.Data_Functor_Contravariant;
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Optic_Internal_Setter = PS.Optic_Internal_Setter;
    var Data_Maybe = PS.Data_Maybe;
    var Optic_Types = PS.Optic_Types;
    var set = function (stab) {
        return function (b) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(stab(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["const"](b))));
        };
    };
    var $dot$tilde = set;
    return {
        set: set, 
        ".~": $dot$tilde
    };
})();
var PS = PS || {};
PS.Optic_Core = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Getter = PS.Optic_Getter;
    var Optic_Lens = PS.Optic_Lens;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Setter = PS.Optic_Setter;
    var Optic_Types = PS.Optic_Types;
    var $dot$tilde = Optic_Setter[".~"];
    var $dot$dot = Prelude["<<<"];
    return {
        ".~": $dot$tilde, 
        "..": $dot$dot
    };
})();
var PS = PS || {};
PS.Halogen_HTML_Events_Monad = (function () {
    "use strict";
    var Control_Monad_Aff = PS.Control_Monad_Aff;
    var Control_Monad_ListT = PS.Control_Monad_ListT;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Control_Monad_Aff_Class = PS.Control_Monad_Aff_Class;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Event = function (x) {
        return x;
    };
    var unEvent = function (_906) {
        return _906;
    };
    var runEvent = function (f) {
        return function (s) {
            var handler = function (_908) {
                if (_908 instanceof Data_Maybe.Nothing) {
                    return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
                };
                if (_908 instanceof Data_Maybe.Just) {
                    return Control_Apply["*>"](Control_Monad_Eff.applyEff)(s(_908.value0.value0))(go(_908.value0.value1));
                };
                throw new Error("Failed pattern match");
            };
            var go = function (l) {
                return Control_Monad_Aff.runAff(f)(handler)(Control_Monad_ListT.uncons(Control_Monad_Aff.monadAff)(l));
            };
            return Prelude["<<<"](Prelude.semigroupoidArr)(go)(unEvent);
        };
    };
    var monadAffEvent = new Control_Monad_Aff_Class.MonadAff(Prelude["<<<"](Prelude.semigroupoidArr)(Event)(Control_Monad_Trans.lift(Control_Monad_ListT.monadTransListT)(Control_Monad_Aff.monadAff)));
    var functorEvent = new Prelude.Functor(function (f) {
        return function (_911) {
            return Prelude["<$>"](Control_Monad_ListT.functorListT(Control_Monad_Aff.functorAff))(f)(_911);
        };
    });
    var async = Control_Monad_Aff_Class.liftAff(monadAffEvent);
    var applyEvent = new Prelude.Apply(function (_912) {
        return function (_913) {
            return Prelude["<*>"](Control_Monad_ListT.applyListT(Control_Monad_Aff.monadAff))(_912)(_913);
        };
    }, function () {
        return functorEvent;
    });
    var applicativeEvent = new Prelude.Applicative(function () {
        return applyEvent;
    }, Prelude["<<<"](Prelude.semigroupoidArr)(Event)(Prelude.pure(Control_Monad_ListT.applicativeListT(Control_Monad_Aff.monadAff))));
    var altEvent = new Control_Alt.Alt(function (_915) {
        return function (_916) {
            return Control_Alt["<|>"](Control_Monad_ListT.altListT(Control_Monad_Aff.applicativeAff))(_915)(_916);
        };
    }, function () {
        return functorEvent;
    });
    var plusEvent = new Control_Plus.Plus(function () {
        return altEvent;
    }, Control_Plus.empty(Control_Monad_ListT.plusListT(Control_Monad_Aff.monadAff)));
    var alternativeEvent = new Control_Alternative.Alternative(function () {
        return plusEvent;
    }, function () {
        return applicativeEvent;
    });
    return {
        Event: Event, 
        async: async, 
        runEvent: runEvent, 
        unEvent: unEvent, 
        functorEvent: functorEvent, 
        applyEvent: applyEvent, 
        applicativeEvent: applicativeEvent, 
        monadAffEvent: monadAffEvent, 
        altEvent: altEvent, 
        plusEvent: plusEvent, 
        alternativeEvent: alternativeEvent
    };
})();
var PS = PS || {};
PS.Halogen = (function () {
    "use strict";
    var Halogen_Signal = PS.Halogen_Signal;
    var Halogen_Internal_VirtualDOM = PS.Halogen_Internal_VirtualDOM;
    var Halogen_Component = PS.Halogen_Component;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff_Ref = PS.Control_Monad_Eff_Ref;
    var Control_Monad_Eff_Unsafe = PS.Control_Monad_Eff_Unsafe;
    var Halogen_HTML_Events_Monad = PS.Halogen_HTML_Events_Monad;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Halogen_HTML_Renderer_VirtualDOM = PS.Halogen_HTML_Renderer_VirtualDOM;
    var DOM = PS.DOM;
    var Data_Void = PS.Data_Void;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Halogen_HTML = PS.Halogen_HTML;
    var changes = Halogen_Signal.differencesWith(Halogen_Internal_VirtualDOM.diff);
    var runUI$prime = function (ref) {
        return function (sf) {
            var widgetHandler = Prelude["<$>"](Halogen_Internal_VirtualDOM.functorWidget)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(Halogen_HTML_Events_Monad.applicativeEvent))(Data_Either.Right.create));
            var logger = function (e) {
                return Debug_Trace.trace("Uncaught error in asynchronous code: " + Control_Monad_Eff_Exception.message(e));
            };
            var driver = function (e) {
                return function __do() {
                    var _58 = Control_Monad_Eff_Ref.readRef(ref)();
                    if (_58 instanceof Data_Maybe.Just) {
                        var next = Halogen_Signal.runSF(_58.value0.signal)(e);
                        var _57 = Halogen_Internal_VirtualDOM.patch(Halogen_Signal.head(next))(_58.value0.node)();
                        return Control_Monad_Eff_Ref.writeRef(ref)(new Data_Maybe.Just({
                            signal: Halogen_Signal.tail(next), 
                            node: _57
                        }))();
                    };
                    throw new Error("Failed pattern match");
                };
            };
            var externalDriver = function (req) {
                return driver(new Data_Either.Right(req));
            };
            var requestHandler = function (aff) {
                return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(Halogen_HTML_Events_Monad.runEvent(logger)(driver)(aff));
            };
            var render = Halogen_HTML_Renderer_VirtualDOM.renderHTML(requestHandler)(widgetHandler);
            var vtrees = Prelude["<$>"](Halogen_Signal.functorSF1)(render)(sf);
            var node = Halogen_Internal_VirtualDOM.createElement(Halogen_Signal.head(vtrees));
            var diffs = Prelude[">>>"](Halogen_Signal.semigroupoidSF)(Halogen_Signal.tail(vtrees))(changes(Halogen_Signal.head(vtrees)));
            return function __do() {
                Control_Monad_Eff_Ref.writeRef(ref)(new Data_Maybe.Just({
                    signal: diffs, 
                    node: node
                }))();
                return new Data_Tuple.Tuple(node, externalDriver);
            };
        };
    };
    var runUI = Halogen_Component.runComponent(function (sf) {
        return function __do() {
            var _56 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
            return runUI$prime(_56)(sf)();
        };
    });
    return {
        runUI: runUI, 
        changes: changes
    };
})();
var PS = PS || {};
PS.Naggy_Types = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Set = PS.Data_Set;
    var Data_JSON = PS.Data_JSON;
    var Data_Int = PS.Data_Int;
    var Data_String = PS.Data_String;
    var Data_Map = PS.Data_Map;
    var Data_Date = PS.Data_Date;
    var Data_Date_Locale = PS.Data_Date_Locale;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Time = PS.Data_Time;
    var Data_Traversable = PS.Data_Traversable;
    var Halogen = PS.Halogen;
    var Optic_Core = PS.Optic_Core;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Array = PS.Data_Array;
    var Time = function (x) {
        return x;
    };
    var Weekly = (function () {
        function Weekly(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Weekly.create = function (value0) {
            return function (value1) {
                return new Weekly(value0, value1);
            };
        };
        return Weekly;
    })();
    var ReminderData = function (x) {
        return x;
    };
    var Reminder = (function () {
        function Reminder(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Reminder.create = function (value0) {
            return function (value1) {
                return new Reminder(value0, value1);
            };
        };
        return Reminder;
    })();
    var FormErrors = (function () {
        function FormErrors(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        FormErrors.create = function (value0) {
            return function (value1) {
                return new FormErrors(value0, value1);
            };
        };
        return FormErrors;
    })();
    var ReminderForm = (function () {
        function ReminderForm(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ReminderForm.create = function (value0) {
            return function (value1) {
                return new ReminderForm(value0, value1);
            };
        };
        return ReminderForm;
    })();
    var ShowForm = (function () {
        function ShowForm(value0) {
            this.value0 = value0;
        };
        ShowForm.create = function (value0) {
            return new ShowForm(value0);
        };
        return ShowForm;
    })();
    var ShowList = (function () {
        function ShowList(value0) {
            this.value0 = value0;
        };
        ShowList.create = function (value0) {
            return new ShowList(value0);
        };
        return ShowList;
    })();
    var AddReminder = (function () {
        function AddReminder(value0) {
            this.value0 = value0;
        };
        AddReminder.create = function (value0) {
            return new AddReminder(value0);
        };
        return AddReminder;
    })();
    var DeleteReminder = (function () {
        function DeleteReminder(value0) {
            this.value0 = value0;
        };
        DeleteReminder.create = function (value0) {
            return new DeleteReminder(value0);
        };
        return DeleteReminder;
    })();
    var CancelAdd = (function () {
        function CancelAdd() {

        };
        CancelAdd.value = new CancelAdd();
        return CancelAdd;
    })();
    var Loading = (function () {
        function Loading() {

        };
        Loading.value = new Loading();
        return Loading;
    })();
    var List = (function () {
        function List() {

        };
        List.value = new List();
        return List;
    })();
    var Form = (function () {
        function Form(value0) {
            this.value0 = value0;
        };
        Form.create = function (value0) {
            return new Form(value0);
        };
        return Form;
    })();
    var State = function (x) {
        return x;
    };
    var tz = function (__dict_Functor_825) {
        return function (f) {
            return function (o) {
                return Prelude["<#>"](__dict_Functor_825)(f(o.tz))(function (a) {
                    var _1703 = {};
                    for (var _1704 in o) {
                        if (o.hasOwnProperty(_1704)) {
                            _1703[_1704] = o[_1704];
                        };
                    };
                    _1703.tz = a;
                    return _1703;
                });
            };
        };
    };
    var time = function (__dict_Functor_826) {
        return function (f) {
            return function (o) {
                return Prelude["<#>"](__dict_Functor_826)(f(o.time))(function (a) {
                    var _1705 = {};
                    for (var _1706 in o) {
                        if (o.hasOwnProperty(_1706)) {
                            _1705[_1706] = o[_1706];
                        };
                    };
                    _1705.time = a;
                    return _1705;
                });
            };
        };
    };
    var showRepeating = new Prelude.Show(function (_929) {
        var e = (function () {
            var _1708 = _929.value0 === 1;
            if (_1708) {
                return "Every week";
            };
            if (!_1708) {
                return "Every " + (Prelude.show(Prelude.showNumber)(_929.value0) + " weeks");
            };
            throw new Error("Failed pattern match");
        })();
        var ds = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(",")(Prelude["<$>"](Data_Array.functorArray)(Prelude.show(Data_Date.showDayOfWeek))(Data_Set.toList(_929.value1)));
        return e + (" on " + ds);
    });
    var repeating = function (__dict_Functor_827) {
        return function (f) {
            return function (o) {
                return Prelude["<#>"](__dict_Functor_827)(f(o.repeating))(function (a) {
                    var _1711 = {};
                    for (var _1712 in o) {
                        if (o.hasOwnProperty(_1712)) {
                            _1711[_1712] = o[_1712];
                        };
                    };
                    _1711.repeating = a;
                    return _1711;
                });
            };
        };
    };
    var pad = function (s) {
        var _1713 = Data_String.length(s) < 2;
        if (_1713) {
            return "0" + s;
        };
        if (!_1713) {
            return s;
        };
        throw new Error("Failed pattern match");
    };
    var showHourOfDay = new Prelude.Show(function (_933) {
        return pad(Prelude.show(Prelude.showNumber)(Data_Int.toNumber(_933)));
    });
    var showMinuteOfHour = new Prelude.Show(function (_934) {
        return pad(Prelude.show(Prelude.showNumber)(Data_Int.toNumber(_934)));
    });
    var showTime = new Prelude.Show(function (_932) {
        return Prelude.show(showHourOfDay)(_932.hour) + (":" + Prelude.show(showMinuteOfHour)(_932.minute));
    });
    var mkTime = function (h) {
        return function (m) {
            return {
                hour: h, 
                minute: m
            };
        };
    };
    var minuteOfHourFromJSON = new Data_JSON.FromJSON(function (v) {
        return Prelude[">>="](Data_Either.bindEither)(Data_JSON.parseJSON(Data_JSON.numberFromJSON)(v))(function (n) {
            var _1717 = n >= 0 && n < 60;
            if (_1717) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Time.MinuteOfHour(Data_Int.fromNumber(n)));
            };
            if (!_1717) {
                return Data_JSON.fail("not a valid minute of hour '" + (Prelude.show(Prelude.showNumber)(n) + "'"));
            };
            throw new Error("Failed pattern match");
        });
    });
    var message = function (__dict_Functor_830) {
        return function (f) {
            return function (o) {
                return Prelude["<#>"](__dict_Functor_830)(f(o.message))(function (a) {
                    var _1718 = {};
                    for (var _1719 in o) {
                        if (o.hasOwnProperty(_1719)) {
                            _1718[_1719] = o[_1719];
                        };
                    };
                    _1718.message = a;
                    return _1718;
                });
            };
        };
    };
    var lookupSubmissionError = function (_926) {
        return _926.value0;
    };
    var lookupFieldError = function (n) {
        return function (_922) {
            return Data_Map.lookup(Prelude.ordString)(n)(_922.value1);
        };
    };
    var intToJSON = new Data_JSON.ToJSON(Prelude["<<<"](Prelude.semigroupoidArr)(Data_JSON.toJSON(Data_JSON.numberToJSON))(Data_Int.toNumber));
    var minuteOfHourToJSON = new Data_JSON.ToJSON(function (_937) {
        return Data_JSON.toJSON(intToJSON)(_937);
    });
    var insertSubmissionError = function (e) {
        return function (_924) {
            return new FormErrors(new Data_Maybe.Just(e), _924.value1);
        };
    };
    var insertFieldError = function (n) {
        return function (v) {
            return function (_921) {
                return new FormErrors(_921.value0, Data_Map.insert(Prelude.ordString)(n)(v)(_921.value1));
            };
        };
    };
    var initialState = {
        displaying: Loading.value, 
        reminders: [  ]
    };
    var hourOfDayToJSON = new Data_JSON.ToJSON(function (_936) {
        return Data_JSON.toJSON(intToJSON)(_936);
    });
    var timeToJSON = new Data_JSON.ToJSON(function (_935) {
        return Data_JSON.object([ Data_JSON[".="](hourOfDayToJSON)("hour")(_935.hour), Data_JSON[".="](minuteOfHourToJSON)("minute")(_935.minute) ]);
    });
    var hourOfDayFromJSON = new Data_JSON.FromJSON(function (v) {
        return Prelude[">>="](Data_Either.bindEither)(Data_JSON.parseJSON(Data_JSON.numberFromJSON)(v))(function (n) {
            var _1739 = n >= 0 && n < 24;
            if (_1739) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Time.HourOfDay(Data_Int.fromNumber(n)));
            };
            if (!_1739) {
                return Data_JSON.fail("not a valid hour of day '" + (Prelude.show(Prelude.showNumber)(n) + "'"));
            };
            throw new Error("Failed pattern match");
        });
    });
    var timeFromJSON = new Data_JSON.FromJSON(function (_938) {
        if (_938 instanceof Data_JSON.JObject) {
            return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](hourOfDayFromJSON)(_938.value0)("hour"))(function (_61) {
                return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](minuteOfHourFromJSON)(_938.value0)("minute"))(function (_60) {
                    return Prelude["return"](Data_Either.monadEither)({
                        hour: _61, 
                        minute: _60
                    });
                });
            });
        };
        return Data_JSON.fail("expected object for Time");
    });
    var hasFieldErrors = function (_925) {
        return !Data_Map.isEmpty(_925.value1);
    };
    var emptyFormErrors = new FormErrors(Data_Maybe.Nothing.value, Data_Map.empty);
    var deleteFieldError = function (n) {
        return function (_923) {
            return new FormErrors(_923.value0, Data_Map["delete"](Prelude.ordString)(n)(_923.value1));
        };
    };
    var dayOfWeekToJSON = new Data_JSON.ToJSON(function (d) {
        return Data_JSON.toJSON(Data_JSON.stringToJSON)((function () {
            if (d instanceof Data_Date.Sunday) {
                return "Sunday";
            };
            if (d instanceof Data_Date.Monday) {
                return "Monday";
            };
            if (d instanceof Data_Date.Tuesday) {
                return "Tuesday";
            };
            if (d instanceof Data_Date.Wednesday) {
                return "Wednesday";
            };
            if (d instanceof Data_Date.Thursday) {
                return "Thursday";
            };
            if (d instanceof Data_Date.Friday) {
                return "Friday";
            };
            if (d instanceof Data_Date.Saturday) {
                return "Saturday";
            };
            throw new Error("Failed pattern match");
        })());
    });
    var repeatingToJSON = new Data_JSON.ToJSON(function (r) {
        return Data_JSON.object([ Data_JSON[".="](Data_JSON.valueToJSON)("weekly")(Data_JSON.object([ Data_JSON[".="](Data_JSON.numberToJSON)("every")(r.value0), Data_JSON[".="](Data_JSON.setToJSON(dayOfWeekToJSON))("days")(r.value1) ])) ]);
    });
    var reminderToJSON = new Data_JSON.ToJSON(function (_939) {
        return Data_JSON.object([ Data_JSON[".="](timeToJSON)("time")(_939.time), Data_JSON[".="](Data_JSON.stringToJSON)("tz")(_939.tz), Data_JSON[".="](repeatingToJSON)("repeating")(_939.repeating), Data_JSON[".="](Data_JSON.stringToJSON)("message")(_939.message) ]);
    });
    var dayOfWeekFromJSON = new Data_JSON.FromJSON(function (_931) {
        if (_931 instanceof Data_JSON.JString) {
            if (_931.value0 === "Sunday") {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Date.Sunday.value);
            };
            if (_931.value0 === "Monday") {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Date.Monday.value);
            };
            if (_931.value0 === "Tuesday") {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Date.Tuesday.value);
            };
            if (_931.value0 === "Wednesday") {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Date.Wednesday.value);
            };
            if (_931.value0 === "Thursday") {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Date.Thursday.value);
            };
            if (_931.value0 === "Friday") {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Date.Friday.value);
            };
            if (_931.value0 === "Saturday") {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Date.Saturday.value);
            };
            return Data_JSON.fail("invalid day " + _931.value0);
        };
        throw new Error("Failed pattern match");
    });
    var repeatingFromJSON = new Data_JSON.FromJSON(function (_930) {
        if (_930 instanceof Data_JSON.JObject) {
            return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.valueFromJSON)(_930.value0)("weekly"))(function (w) {
                if (w instanceof Data_JSON.JObject) {
                    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Weekly.create)(Data_JSON[".:"](Data_JSON.numberFromJSON)(w.value0)("every")))(Data_JSON[".:"](Data_JSON.setFromJSON(Data_Date.ordDayOfWeek)(dayOfWeekFromJSON))(w.value0)("days"));
                };
                return Data_JSON.fail("expected object for Weekly");
            });
        };
        return Data_JSON.fail("expected object for Repeating");
    });
    var reminderDataFromJSON = new Data_JSON.FromJSON(function (_940) {
        if (_940 instanceof Data_JSON.JObject) {
            return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](timeFromJSON)(_940.value0)("time"))(function (_65) {
                return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.stringFromJSON)(_940.value0)("tz"))(function (_64) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](repeatingFromJSON)(_940.value0)("repeating"))(function (_63) {
                        return Prelude[">>="](Data_Either.bindEither)(Data_JSON[".:"](Data_JSON.stringFromJSON)(_940.value0)("message"))(function (_62) {
                            return Prelude["return"](Data_Either.monadEither)({
                                time: _65, 
                                tz: _64, 
                                repeating: _63, 
                                message: _62
                            });
                        });
                    });
                });
            });
        };
        return Data_JSON.fail("expected object for ReminderData");
    });
    var reminderFromJSON = new Data_JSON.FromJSON(function (_941) {
        if (_941 instanceof Data_JSON.JObject) {
            return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Reminder.create)(Data_JSON[".:"](Data_JSON.stringFromJSON)(_941.value0)("id")))(Data_JSON.parseJSON(reminderDataFromJSON)(_941));
        };
        throw new Error("Failed pattern match");
    });
    var _ReminderData = function (__dict_Functor_835) {
        return function (f) {
            return function (_920) {
                return Prelude["<$>"](__dict_Functor_835)(ReminderData)(f(_920));
            };
        };
    };
    return {
        State: State, 
        Loading: Loading, 
        List: List, 
        Form: Form, 
        ShowForm: ShowForm, 
        ShowList: ShowList, 
        AddReminder: AddReminder, 
        DeleteReminder: DeleteReminder, 
        CancelAdd: CancelAdd, 
        Reminder: Reminder, 
        ReminderForm: ReminderForm, 
        FormErrors: FormErrors, 
        ReminderData: ReminderData, 
        Time: Time, 
        Weekly: Weekly, 
        initialState: initialState, 
        lookupSubmissionError: lookupSubmissionError, 
        hasFieldErrors: hasFieldErrors, 
        insertSubmissionError: insertSubmissionError, 
        deleteFieldError: deleteFieldError, 
        lookupFieldError: lookupFieldError, 
        insertFieldError: insertFieldError, 
        emptyFormErrors: emptyFormErrors, 
        message: message, 
        repeating: repeating, 
        tz: tz, 
        time: time, 
        _ReminderData: _ReminderData, 
        mkTime: mkTime, 
        pad: pad, 
        showRepeating: showRepeating, 
        repeatingToJSON: repeatingToJSON, 
        dayOfWeekToJSON: dayOfWeekToJSON, 
        repeatingFromJSON: repeatingFromJSON, 
        dayOfWeekFromJSON: dayOfWeekFromJSON, 
        showTime: showTime, 
        showHourOfDay: showHourOfDay, 
        showMinuteOfHour: showMinuteOfHour, 
        timeToJSON: timeToJSON, 
        hourOfDayToJSON: hourOfDayToJSON, 
        minuteOfHourToJSON: minuteOfHourToJSON, 
        intToJSON: intToJSON, 
        timeFromJSON: timeFromJSON, 
        hourOfDayFromJSON: hourOfDayFromJSON, 
        minuteOfHourFromJSON: minuteOfHourFromJSON, 
        reminderToJSON: reminderToJSON, 
        reminderDataFromJSON: reminderDataFromJSON, 
        reminderFromJSON: reminderFromJSON
    };
})();
var PS = PS || {};
PS.Naggy_Ajax = (function () {
    "use strict";
    var Network_HTTP_Affjax = PS.Network_HTTP_Affjax;
    var Network_HTTP_MimeType_Common = PS.Network_HTTP_MimeType_Common;
    var Prelude = PS.Prelude;
    var Data_JSON = PS.Data_JSON;
    var Control_Functor = PS.Control_Functor;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Error_Class = PS.Control_Monad_Error_Class;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Control_Monad_Aff = PS.Control_Monad_Aff;
    var Data_Maybe = PS.Data_Maybe;
    var Network_HTTP_Affjax_Request = PS.Network_HTTP_Affjax_Request;
    var Network_HTTP_Method = PS.Network_HTTP_Method;
    var Network_HTTP_RequestHeader = PS.Network_HTTP_RequestHeader;
    var Naggy_Types = PS.Naggy_Types;
    var Network_HTTP_Affjax_Response = PS.Network_HTTP_Affjax_Response;
    var deleteReminder = function (_942) {
        return Control_Functor["$>"](Control_Monad_Aff.functorAff)(Network_HTTP_Affjax.delete_("/reminders/" + _942.value0))(Prelude.unit);
    };
    var decode = function (__dict_FromJSON_836) {
        return function (r) {
            return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff))(Control_Monad_Eff_Exception.error))(Prelude.pure(Control_Monad_Aff.applicativeAff))(Data_JSON.eitherDecode(__dict_FromJSON_836)(r.response));
        };
    };
    var loadReminders = Prelude[">>="](Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.get(Network_HTTP_Affjax_Response.responsableString)("/reminders"))(decode(Data_JSON.arrayFromJSON(Naggy_Types.reminderFromJSON)));
    var postReminder = function (r) {
        var req = (function () {
            var _1776 = {};
            for (var _1777 in Network_HTTP_Affjax.defaultRequest) {
                if (Network_HTTP_Affjax.defaultRequest.hasOwnProperty(_1777)) {
                    _1776[_1777] = Network_HTTP_Affjax.defaultRequest[_1777];
                };
            };
            _1776.method = Network_HTTP_Method.POST.value;
            _1776.url = "/reminders";
            _1776.headers = [ new Network_HTTP_RequestHeader.ContentType(Network_HTTP_MimeType_Common.applicationJSON) ];
            _1776.content = Data_Maybe.Just.create(Data_JSON.encode(Naggy_Types.reminderToJSON)(r));
            return _1776;
        })();
        return Prelude[">>="](Control_Monad_Aff.bindAff)(Network_HTTP_Affjax.affjax(Network_HTTP_Affjax_Request.requestableString)(Network_HTTP_Affjax_Response.responsableString)(req))(decode(Naggy_Types.reminderFromJSON));
    };
    return {
        decode: decode, 
        deleteReminder: deleteReminder, 
        loadReminders: loadReminders, 
        postReminder: postReminder
    };
})();
var PS = PS || {};
PS.Naggy_Form_AUI = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Naggy_Types = PS.Naggy_Types;
    var Halogen_HTML = PS.Halogen_HTML;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Halogen_HTML_Events_Monad = PS.Halogen_HTML_Events_Monad;
    var Data_Array = PS.Data_Array;
    var errorDiv = function (es) {
        return function (field) {
            return Prelude["<#>"](Data_Array.functorArray)(Data_Maybe.maybe([  ])(Prelude.pure(Data_Array.applicativeArray))(Naggy_Types.lookupFieldError(field)(es)))(function (e) {
                return Halogen_HTML.div([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("error") ]) ])([ Halogen_HTML.text(e) ]);
            });
        };
    };
    return {
        errorDiv: errorDiv
    };
})();
var PS = PS || {};
PS.Naggy_Form_MessageField = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Halogen_HTML = PS.Halogen_HTML;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Halogen_HTML_Events_Forms = PS.Halogen_HTML_Events_Forms;
    var Halogen_HTML_Events = PS.Halogen_HTML_Events;
    var Data_String = PS.Data_String;
    var Naggy_Types = PS.Naggy_Types;
    var Optic_Core = PS.Optic_Core;
    var Naggy_Form_AUI = PS.Naggy_Form_AUI;
    var Halogen_HTML_Events_Monad = PS.Halogen_HTML_Events_Monad;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Identity = PS.Data_Identity;
    var messageField = function (_943) {
        return Halogen_HTML.div([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("field-group") ]) ])(Prelude["++"](Data_Array.semigroupArray)([ Halogen_HTML.label([ Halogen_HTML_Attributes["for"]("message") ])([ Halogen_HTML.text("Message") ]), Halogen_HTML.input([ Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "text", "long-field" ])), Halogen_HTML_Attributes.id_("message"), Halogen_HTML_Attributes.value(_943.value1.message), Halogen_HTML_Events_Forms.onInput(Halogen_HTML_Events_Monad.alternativeEvent)(Data_Foreign_Class.stringIsForeign)(Halogen_HTML_Events.input(Halogen_HTML_Events_Monad.applicativeEvent)(function (msg) {
            var form$prime = (function () {
                var _1779 = Data_String.length(msg) > 0;
                if (_1779) {
                    return new Naggy_Types.ReminderForm(Naggy_Types.deleteFieldError("message")(_943.value0), Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(Naggy_Types._ReminderData(Data_Identity.functorIdentity))(Naggy_Types.message(Data_Identity.functorIdentity)))(msg)(_943.value1));
                };
                if (!_1779) {
                    return new Naggy_Types.ReminderForm(Naggy_Types.insertFieldError("message")("Message cannot be empty")(_943.value0), _943.value1);
                };
                throw new Error("Failed pattern match");
            })();
            return new Naggy_Types.ShowForm(form$prime);
        })) ])([  ]) ])(Naggy_Form_AUI.errorDiv(_943.value0)("message")));
    };
    return {
        messageField: messageField
    };
})();
var PS = PS || {};
PS.Naggy_Form_RepeatingField = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Halogen_HTML = PS.Halogen_HTML;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Data_Enum = PS.Data_Enum;
    var Naggy_Form_AUI = PS.Naggy_Form_AUI;
    var Data_String = PS.Data_String;
    var Data_Set = PS.Data_Set;
    var Halogen_HTML_Events_Forms = PS.Halogen_HTML_Events_Forms;
    var Halogen_HTML_Events = PS.Halogen_HTML_Events;
    var Naggy_Types = PS.Naggy_Types;
    var Optic_Core = PS.Optic_Core;
    var Data_Date = PS.Data_Date;
    var Halogen_HTML_Events_Monad = PS.Halogen_HTML_Events_Monad;
    var Data_Identity = PS.Data_Identity;
    var Data_Array = PS.Data_Array;
    var repeatingField = function (_944) {
        var dayCheckbox = function (days) {
            return function (n) {
                return function (day) {
                    return Halogen_HTML.span_([ Halogen_HTML.input([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("checkbox") ]), Halogen_HTML_Attributes.type_("checkbox"), Halogen_HTML_Attributes.id_(Data_String.toLower(Prelude.show(Data_Date.showDayOfWeek)(day))), Halogen_HTML_Attributes.checked(Data_Set.member(Data_Date.ordDayOfWeek)(day)(days)), Halogen_HTML_Events_Forms.onChecked(Halogen_HTML_Events_Monad.alternativeEvent)(Halogen_HTML_Events.input(Halogen_HTML_Events_Monad.applicativeEvent)(function (checked) {
                        return Naggy_Types.ShowForm.create((function () {
                            if (checked) {
                                return new Naggy_Types.ReminderForm(Naggy_Types.deleteFieldError("weekly")(_944.value0), Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(Naggy_Types._ReminderData(Data_Identity.functorIdentity))(Naggy_Types.repeating(Data_Identity.functorIdentity)))(new Naggy_Types.Weekly(n, Data_Set.insert(Data_Date.ordDayOfWeek)(day)(days)))(_944.value1));
                            };
                            if (!checked) {
                                var days$prime = Data_Set["delete"](Data_Date.ordDayOfWeek)(day)(days);
                                var es$prime = (function () {
                                    var _1784 = Data_Set.isEmpty(days$prime);
                                    if (_1784) {
                                        return Naggy_Types.insertFieldError("weekly")("At least one day must be selected.")(_944.value0);
                                    };
                                    if (!_1784) {
                                        return _944.value0;
                                    };
                                    throw new Error("Failed pattern match");
                                })();
                                var r$prime = Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(Naggy_Types._ReminderData(Data_Identity.functorIdentity))(Naggy_Types.repeating(Data_Identity.functorIdentity)))(new Naggy_Types.Weekly(n, days$prime))(_944.value1);
                                return new Naggy_Types.ReminderForm(es$prime, r$prime);
                            };
                            throw new Error("Failed pattern match");
                        })());
                    })) ])([  ]), Halogen_HTML.label([ Halogen_HTML_Attributes["for"](Data_String.toLower(Prelude.show(Data_Date.showDayOfWeek)(day))) ])([ Halogen_HTML.text(Data_String.take(1)(Prelude.show(Data_Date.showDayOfWeek)(day))) ]) ]);
                };
            };
        };
        var weekly = function (n) {
            return function (days) {
                return Halogen_HTML.div([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("field-group") ]) ])(Prelude["++"](Data_Array.semigroupArray)([ Halogen_HTML.label_([ Halogen_HTML.text("Repeat on") ]) ])(Prelude["++"](Data_Array.semigroupArray)(Prelude["<#>"](Data_Array.functorArray)(Data_Enum.enumFromTo(Data_Date.enumDayOfWeek)(Data_Date.Sunday.value)(Data_Date.Saturday.value))(dayCheckbox(days)(n)))(Naggy_Form_AUI.errorDiv(_944.value0)("weekly"))));
            };
        };
        var build = weekly(_944.value1.repeating.value0)(_944.value1.repeating.value1);
        return build;
    };
    return {
        repeatingField: repeatingField
    };
})();
var PS = PS || {};
PS.Naggy_Form_TimeField = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Halogen_HTML = PS.Halogen_HTML;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Halogen_HTML_Events_Forms = PS.Halogen_HTML_Events_Forms;
    var Halogen_HTML_Events = PS.Halogen_HTML_Events;
    var Data_Int = PS.Data_Int;
    var Data_String = PS.Data_String;
    var Naggy_Types = PS.Naggy_Types;
    var Optic_Core = PS.Optic_Core;
    var Naggy_Form_AUI = PS.Naggy_Form_AUI;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Time = PS.Data_Time;
    var Halogen_HTML_Events_Monad = PS.Halogen_HTML_Events_Monad;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Identity = PS.Data_Identity;
    
  function parseInt(s) {
    if(/^([0-9]+)$/.test(s)) return new Data_Maybe.Just(Number(s));
    else return Data_Maybe.Nothing.value;
  }
  ;
    
  function timezones() {
    return JSON.parse(document.getElementById('timezones').innerHTML);
  }
  ;
    var timeField = function (_945) {
        return Halogen_HTML.div([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("field-group") ]) ])(Prelude["++"](Data_Array.semigroupArray)([ Halogen_HTML.label([ Halogen_HTML_Attributes["for"]("time") ])([ Halogen_HTML.text("Time") ]), Halogen_HTML.input([ Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "time" ])), Halogen_HTML_Attributes.type_("time"), Halogen_HTML_Attributes.id_("time"), Halogen_HTML_Attributes.value(Prelude.show(Naggy_Types.showTime)(_945.value1.time)), Halogen_HTML_Events_Forms.onInput(Halogen_HTML_Events_Monad.alternativeEvent)(Data_Foreign_Class.stringIsForeign)(Halogen_HTML_Events.input(Halogen_HTML_Events_Monad.applicativeEvent)(function (s) {
            var parse = function (tf) {
                return function (f) {
                    return function (s_1) {
                        return Prelude[">>="](Data_Maybe.bindMaybe)(parseInt(s_1))(function (n) {
                            var _1791 = tf(n);
                            if (_1791) {
                                return new Data_Maybe.Just(f(Data_Int.fromNumber(n)));
                            };
                            if (!_1791) {
                                return Data_Maybe.Nothing.value;
                            };
                            throw new Error("Failed pattern match");
                        });
                    };
                };
            };
            var mt = (function () {
                var _1792 = Data_String.split(":")(s);
                if (_1792.length === 2) {
                    return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Naggy_Types.mkTime)(parse(function (n) {
                        return n >= 0 && n <= 23;
                    })(Data_Time.HourOfDay)(_1792[0])))(parse(function (n) {
                        return n >= 0 && n <= 59;
                    })(Data_Time.MinuteOfHour)(_1792[1]));
                };
                return Data_Maybe.Nothing.value;
            })();
            var form$prime = (function () {
                if (mt instanceof Data_Maybe.Just) {
                    return new Naggy_Types.ReminderForm(Naggy_Types.deleteFieldError("time")(_945.value0), Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(Naggy_Types._ReminderData(Data_Identity.functorIdentity))(Naggy_Types.time(Data_Identity.functorIdentity)))(mt.value0)(_945.value1));
                };
                if (mt instanceof Data_Maybe.Nothing) {
                    return new Naggy_Types.ReminderForm(Naggy_Types.insertFieldError("time")("Time must be in 24-hour format, hh:mm")(_945.value0), _945.value1);
                };
                throw new Error("Failed pattern match");
            })();
            return new Naggy_Types.ShowForm(form$prime);
        })) ])([  ]), Halogen_HTML.select([ Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "select" ])), Halogen_HTML_Attributes.value(_945.value1.tz), Halogen_HTML_Events_Forms.onValueChanged(Halogen_HTML_Events_Monad.alternativeEvent)(Data_Foreign_Class.stringIsForeign)(Halogen_HTML_Events.input(Halogen_HTML_Events_Monad.applicativeEvent)(function (tz$prime) {
            return Naggy_Types.ShowForm.create(new Naggy_Types.ReminderForm(_945.value0, Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(Naggy_Types._ReminderData(Data_Identity.functorIdentity))(Naggy_Types.tz(Data_Identity.functorIdentity)))(tz$prime)(_945.value1)));
        })) ])(Prelude["<#>"](Data_Array.functorArray)(timezones(Prelude.unit))(function (tz) {
            return Halogen_HTML.option([ Halogen_HTML_Attributes.selected(tz === _945.value1.tz) ])([ Halogen_HTML.text(tz) ]);
        })) ])(Prelude["++"](Data_Array.semigroupArray)(Naggy_Form_AUI.errorDiv(_945.value0)("hour"))(Naggy_Form_AUI.errorDiv(_945.value0)("minute"))));
    };
    return {
        timeField: timeField
    };
})();
var PS = PS || {};
PS.Naggy_Form = (function () {
    "use strict";
    var Halogen_HTML = PS.Halogen_HTML;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Naggy_Types = PS.Naggy_Types;
    var Naggy_Form_TimeField = PS.Naggy_Form_TimeField;
    var Naggy_Form_RepeatingField = PS.Naggy_Form_RepeatingField;
    var Naggy_Form_MessageField = PS.Naggy_Form_MessageField;
    var Data_String = PS.Data_String;
    var Halogen_HTML_Events = PS.Halogen_HTML_Events;
    var Halogen_HTML_Events_Monad = PS.Halogen_HTML_Events_Monad;
    var Control_Monad_Aff = PS.Control_Monad_Aff;
    var Naggy_Ajax = PS.Naggy_Ajax;
    var Data_Either = PS.Data_Either;
    var Network_HTTP_Affjax = PS.Network_HTTP_Affjax;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Array = PS.Data_Array;
    var Halogen_HTML_Events_Handler = PS.Halogen_HTML_Events_Handler;
    var addReminder = function (d) {
        return Halogen_HTML_Events_Monad.async(Prelude[">>="](Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(Naggy_Ajax.postReminder(d)))(function (_66) {
            return Prelude["return"](Control_Monad_Aff.monadAff)((function () {
                if (_66 instanceof Data_Either.Left) {
                    return Naggy_Types.ShowForm.create(new Naggy_Types.ReminderForm(Naggy_Types.insertSubmissionError(Prelude.show(Control_Monad_Eff_Exception.showError)(_66.value0))(Naggy_Types.emptyFormErrors), d));
                };
                if (_66 instanceof Data_Either.Right) {
                    return new Naggy_Types.AddReminder(_66.value0);
                };
                throw new Error("Failed pattern match");
            })());
        }));
    };
    var renderForm = function (_946) {
        var title = Halogen_HTML.h1([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("title") ]) ])([ Halogen_HTML.text("Add reminder") ]);
        var fields = Halogen_HTML.form([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("aui") ]) ])(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidArray)([ Data_Maybe.fromMaybe([  ])(Prelude["<#>"](Data_Maybe.functorMaybe)(Naggy_Types.lookupSubmissionError(_946.value0))(function (e) {
            return [ Halogen_HTML.div([ Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "aui-message", "aui-message-error" ])) ])([ Halogen_HTML.p([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("title") ]) ])([ Halogen_HTML.strong_([ Halogen_HTML.text("Error!") ]) ]), Halogen_HTML.p_([ Halogen_HTML.text("Error while submitting form, try again later.") ]) ]) ];
        })), [ Naggy_Form_TimeField.timeField(_946), Naggy_Form_RepeatingField.repeatingField(_946), Naggy_Form_MessageField.messageField(_946) ] ]));
        var buttons = Halogen_HTML.p([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("aui-buttons") ]) ])([ (function () {
            var handlers = (function () {
                var _1804 = !Naggy_Types.hasFieldErrors(_946.value0) && Data_String.length(_946.value1.message) > 0;
                if (_1804) {
                    return [ Halogen_HTML_Events.onclick(Prelude["const"](Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(addReminder(_946.value1)))) ];
                };
                if (!_1804) {
                    return [ Halogen_HTML_Attributes.disabled(true) ];
                };
                throw new Error("Failed pattern match");
            })();
            return Halogen_HTML.button(Prelude["++"](Data_Array.semigroupArray)([ Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "aui-button", "aui-button-primary" ])) ])(handlers))([ Halogen_HTML.text("Add") ]);
        })(), Halogen_HTML.button([ Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "aui-button", "aui-button-link" ])), Halogen_HTML_Events.onclick(Halogen_HTML_Events.input(Halogen_HTML_Events_Monad.applicativeEvent)(Prelude["const"](Naggy_Types.CancelAdd.value))) ])([ Halogen_HTML.text("Cancel") ]) ]);
        return Halogen_HTML.div_([ title, fields, buttons ]);
    };
    return {
        renderForm: renderForm
    };
})();
var PS = PS || {};
PS.Naggy_List = (function () {
    "use strict";
    var Halogen_HTML = PS.Halogen_HTML;
    var Halogen_HTML_Attributes = PS.Halogen_HTML_Attributes;
    var Prelude = PS.Prelude;
    var Halogen_HTML_Events = PS.Halogen_HTML_Events;
    var Control_Functor = PS.Control_Functor;
    var Halogen_HTML_Events_Monad = PS.Halogen_HTML_Events_Monad;
    var Naggy_Ajax = PS.Naggy_Ajax;
    var Naggy_Types = PS.Naggy_Types;
    var Control_Monad_Aff = PS.Control_Monad_Aff;
    var Data_Date = PS.Data_Date;
    var Data_Date_Locale = PS.Data_Date_Locale;
    var Data_Set = PS.Data_Set;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Array = PS.Data_Array;
    var Halogen_HTML_Events_Handler = PS.Halogen_HTML_Events_Handler;
    
  function currentTzName() {
    return jstz.determine().name();
  }
  ;
    var newReminder = Halogen_HTML_Events_Monad.async(Control_Monad_Aff.makeAff(function (_947) {
        return function (k) {
            return function __do() {
                var _71 = Data_Date.now();
                var _70 = Data_Date_Locale.hourOfDay(_71)();
                var _69 = Data_Date_Locale.minuteOfHour(_71)();
                var _68 = currentTzName();
                var _67 = Data_Date_Locale.dayOfWeek(_71)();
                return k({
                    time: {
                        hour: _70, 
                        minute: _69
                    }, 
                    tz: _68, 
                    repeating: new Naggy_Types.Weekly(1, Data_Set.singleton(_67)), 
                    message: ""
                })();
            };
        };
    }));
    var renderList = function (rs) {
        return function (loading) {
            var waitIcon = Halogen_HTML.span([ Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "aui-icon", "aui-icon-small", "aui-icon-wait" ])) ])([ Halogen_HTML.text("Loading...") ]);
            var reminder = function (_948) {
                return Halogen_HTML.tr_([ Halogen_HTML.td_([ Halogen_HTML.text(_948.value1.message) ]), Halogen_HTML.td_([ Halogen_HTML.text(Prelude.show(Naggy_Types.showTime)(_948.value1.time) + (" " + _948.value1.tz)) ]), Halogen_HTML.td_([ Halogen_HTML.text(Prelude.show(Naggy_Types.showRepeating)(_948.value1.repeating)) ]), Halogen_HTML.td([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("action") ]) ])([ Halogen_HTML.ul([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("menu") ]) ])([ Halogen_HTML.li_([ Halogen_HTML.a([ Halogen_HTML_Events.onclick(Prelude["const"](Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Control_Functor["<$"](Halogen_HTML_Events_Monad.functorEvent)(new Naggy_Types.DeleteReminder(_948))(Halogen_HTML_Events_Monad.async(Naggy_Ajax.deleteReminder(_948)))))), Halogen_HTML_Attributes.href("#") ])([ Halogen_HTML.span([ Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "aui-icon", "aui-icon-small", "aui-iconfont-delete" ])) ])([ Halogen_HTML.text("Delete") ]) ]) ]) ]) ]) ]);
            };
            var reminders_ = Halogen_HTML.table([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("aui") ]) ])([ Halogen_HTML.thead_([ Halogen_HTML.tr_([ Halogen_HTML.th_([ Halogen_HTML.text("Message") ]), Halogen_HTML.th_([ Halogen_HTML.text("Time") ]), Halogen_HTML.th_([ Halogen_HTML.text("Repeating") ]), Halogen_HTML.th_([ Halogen_HTML.text("Actions") ]) ]) ]), Halogen_HTML.tbody_(Prelude["<$>"](Data_Array.functorArray)(reminder)(rs)) ]);
            var addButton = Halogen_HTML.button([ Halogen_HTML_Events.onclick(Prelude["const"](Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Prelude["<$>"](Halogen_HTML_Events_Monad.functorEvent)(Prelude["<<<"](Prelude.semigroupoidArr)(Naggy_Types.ShowForm.create)(Naggy_Types.ReminderForm.create(Naggy_Types.emptyFormErrors)))(newReminder)))), Halogen_HTML_Attributes.classes(Prelude["<$>"](Data_Array.functorArray)(Halogen_HTML_Attributes.className)([ "aui-button", "aui-button-primary" ])) ])([ Halogen_HTML.text("Add") ]);
            var title = Halogen_HTML.h1([ Halogen_HTML_Attributes.classes([ Halogen_HTML_Attributes.className("title") ]) ])([ Halogen_HTML.text("Reminders"), (function () {
                if (loading) {
                    return waitIcon;
                };
                if (!loading) {
                    return addButton;
                };
                throw new Error("Failed pattern match");
            })() ]);
            return Halogen_HTML.div_([ title, reminders_ ]);
        };
    };
    return {
        renderList: renderList
    };
})();
var PS = PS || {};
PS.Naggy = (function () {
    "use strict";
    var Naggy_List = PS.Naggy_List;
    var Naggy_Form = PS.Naggy_Form;
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Halogen_Component = PS.Halogen_Component;
    var Halogen_Signal = PS.Halogen_Signal;
    var Naggy_Types = PS.Naggy_Types;
    var Halogen = PS.Halogen;
    var Control_Monad_Aff = PS.Control_Monad_Aff;
    var Debug_Trace = PS.Debug_Trace;
    var Naggy_Ajax = PS.Naggy_Ajax;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Tuple = PS.Data_Tuple;
    var DOM = PS.DOM;
    var Halogen_HTML_Events_Monad = PS.Halogen_HTML_Events_Monad;
    var Network_HTTP_Affjax = PS.Network_HTTP_Affjax;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    
  function appendToBody(node) {
    return function() {
      document.body.appendChild(node);
    };
  }
  ;
    var ui = (function () {
        var update = function (_950) {
            return function (input) {
                if (input instanceof Naggy_Types.ShowList) {
                    var _1820 = {};
                    for (var _1821 in _950) {
                        if (_950.hasOwnProperty(_1821)) {
                            _1820[_1821] = _950[_1821];
                        };
                    };
                    _1820.displaying = Naggy_Types.List.value;
                    _1820.reminders = input.value0;
                    return _1820;
                };
                if (input instanceof Naggy_Types.ShowForm) {
                    var _1823 = {};
                    for (var _1824 in _950) {
                        if (_950.hasOwnProperty(_1824)) {
                            _1823[_1824] = _950[_1824];
                        };
                    };
                    _1823.displaying = new Naggy_Types.Form(input.value0);
                    return _1823;
                };
                if (input instanceof Naggy_Types.AddReminder) {
                    var _1826 = {};
                    for (var _1827 in _950) {
                        if (_950.hasOwnProperty(_1827)) {
                            _1826[_1827] = _950[_1827];
                        };
                    };
                    _1826.displaying = Naggy_Types.List.value;
                    _1826.reminders = Prelude[":"](input.value0)(_950.reminders);
                    return _1826;
                };
                if (input instanceof Naggy_Types.DeleteReminder) {
                    var pred = function (_951) {
                        return _951.value0 !== input.value0.value0;
                    };
                    var _1832 = {};
                    for (var _1833 in _950) {
                        if (_950.hasOwnProperty(_1833)) {
                            _1832[_1833] = _950[_1833];
                        };
                    };
                    _1832.reminders = Data_Array.filter(pred)(_950.reminders);
                    return _1832;
                };
                if (input instanceof Naggy_Types.CancelAdd) {
                    var _1837 = {};
                    for (var _1838 in _950) {
                        if (_950.hasOwnProperty(_1838)) {
                            _1837[_1838] = _950[_1838];
                        };
                    };
                    _1837.displaying = Naggy_Types.List.value;
                    return _1837;
                };
                throw new Error("Failed pattern match");
            };
        };
        var render = function (_949) {
            if (_949.displaying instanceof Naggy_Types.Loading) {
                return Naggy_List.renderList(_949.reminders)(true);
            };
            if (_949.displaying instanceof Naggy_Types.List) {
                return Naggy_List.renderList(_949.reminders)(false);
            };
            if (_949.displaying instanceof Naggy_Types.Form) {
                return Naggy_Form.renderForm(_949.displaying.value0);
            };
            throw new Error("Failed pattern match");
        };
        return Halogen_Component.component(Halogen_HTML_Events_Monad.functorEvent)(Prelude["<$>"](Halogen_Signal.functorSF1)(render)(Halogen_Signal.stateful(Naggy_Types.initialState)(update)));
    })();
    var main = function __do() {
        var _72 = Halogen.runUI(ui)();
        appendToBody(_72.value0)();
        return Control_Monad_Aff.runAff(Prelude["<<<"](Prelude.semigroupoidArr)(Debug_Trace.trace)(Prelude.show(Control_Monad_Eff_Exception.showError)))(Prelude["<<<"](Prelude.semigroupoidArr)(_72.value1)(Naggy_Types.ShowList.create))(Naggy_Ajax.loadReminders)();
    };
    return {
        appendToBody: appendToBody, 
        main: main, 
        ui: ui
    };
})();
PS.Naggy.main();


},{"virtual-dom/create-element":3,"virtual-dom/diff":4,"virtual-dom/patch":8,"virtual-dom/vnode/vnode":22,"virtual-dom/vnode/vtext":24}],2:[function(require,module,exports){

},{}],3:[function(require,module,exports){
var createElement = require("./vdom/create-element.js")

module.exports = createElement

},{"./vdom/create-element.js":10}],4:[function(require,module,exports){
var diff = require("./vtree/diff.js")

module.exports = diff

},{"./vtree/diff.js":26}],5:[function(require,module,exports){
(function (global){
var topLevel = typeof global !== 'undefined' ? global :
    typeof window !== 'undefined' ? window : {}
var minDoc = require('min-document');

if (typeof document !== 'undefined') {
    module.exports = document;
} else {
    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

    if (!doccy) {
        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
    }

    module.exports = doccy;
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"min-document":2}],6:[function(require,module,exports){
"use strict";

module.exports = function isObject(x) {
	return typeof x === "object" && x !== null;
};

},{}],7:[function(require,module,exports){
var nativeIsArray = Array.isArray
var toString = Object.prototype.toString

module.exports = nativeIsArray || isArray

function isArray(obj) {
    return toString.call(obj) === "[object Array]"
}

},{}],8:[function(require,module,exports){
var patch = require("./vdom/patch.js")

module.exports = patch

},{"./vdom/patch.js":13}],9:[function(require,module,exports){
var isObject = require("is-object")
var isHook = require("../vnode/is-vhook.js")

module.exports = applyProperties

function applyProperties(node, props, previous) {
    for (var propName in props) {
        var propValue = props[propName]

        if (propValue === undefined) {
            removeProperty(node, propName, propValue, previous);
        } else if (isHook(propValue)) {
            removeProperty(node, propName, propValue, previous)
            if (propValue.hook) {
                propValue.hook(node,
                    propName,
                    previous ? previous[propName] : undefined)
            }
        } else {
            if (isObject(propValue)) {
                patchObject(node, props, previous, propName, propValue);
            } else {
                node[propName] = propValue
            }
        }
    }
}

function removeProperty(node, propName, propValue, previous) {
    if (previous) {
        var previousValue = previous[propName]

        if (!isHook(previousValue)) {
            if (propName === "attributes") {
                for (var attrName in previousValue) {
                    node.removeAttribute(attrName)
                }
            } else if (propName === "style") {
                for (var i in previousValue) {
                    node.style[i] = ""
                }
            } else if (typeof previousValue === "string") {
                node[propName] = ""
            } else {
                node[propName] = null
            }
        } else if (previousValue.unhook) {
            previousValue.unhook(node, propName, propValue)
        }
    }
}

function patchObject(node, props, previous, propName, propValue) {
    var previousValue = previous ? previous[propName] : undefined

    // Set attributes
    if (propName === "attributes") {
        for (var attrName in propValue) {
            var attrValue = propValue[attrName]

            if (attrValue === undefined) {
                node.removeAttribute(attrName)
            } else {
                node.setAttribute(attrName, attrValue)
            }
        }

        return
    }

    if(previousValue && isObject(previousValue) &&
        getPrototype(previousValue) !== getPrototype(propValue)) {
        node[propName] = propValue
        return
    }

    if (!isObject(node[propName])) {
        node[propName] = {}
    }

    var replacer = propName === "style" ? "" : undefined

    for (var k in propValue) {
        var value = propValue[k]
        node[propName][k] = (value === undefined) ? replacer : value
    }
}

function getPrototype(value) {
    if (Object.getPrototypeOf) {
        return Object.getPrototypeOf(value)
    } else if (value.__proto__) {
        return value.__proto__
    } else if (value.constructor) {
        return value.constructor.prototype
    }
}

},{"../vnode/is-vhook.js":17,"is-object":6}],10:[function(require,module,exports){
var document = require("global/document")

var applyProperties = require("./apply-properties")

var isVNode = require("../vnode/is-vnode.js")
var isVText = require("../vnode/is-vtext.js")
var isWidget = require("../vnode/is-widget.js")
var handleThunk = require("../vnode/handle-thunk.js")

module.exports = createElement

function createElement(vnode, opts) {
    var doc = opts ? opts.document || document : document
    var warn = opts ? opts.warn : null

    vnode = handleThunk(vnode).a

    if (isWidget(vnode)) {
        return vnode.init()
    } else if (isVText(vnode)) {
        return doc.createTextNode(vnode.text)
    } else if (!isVNode(vnode)) {
        if (warn) {
            warn("Item is not a valid virtual dom node", vnode)
        }
        return null
    }

    var node = (vnode.namespace === null) ?
        doc.createElement(vnode.tagName) :
        doc.createElementNS(vnode.namespace, vnode.tagName)

    var props = vnode.properties
    applyProperties(node, props)

    var children = vnode.children

    for (var i = 0; i < children.length; i++) {
        var childNode = createElement(children[i], opts)
        if (childNode) {
            node.appendChild(childNode)
        }
    }

    return node
}

},{"../vnode/handle-thunk.js":15,"../vnode/is-vnode.js":18,"../vnode/is-vtext.js":19,"../vnode/is-widget.js":20,"./apply-properties":9,"global/document":5}],11:[function(require,module,exports){
// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.
// We don't want to read all of the DOM nodes in the tree so we use
// the in-order tree indexing to eliminate recursion down certain branches.
// We only recurse into a DOM node if we know that it contains a child of
// interest.

var noChild = {}

module.exports = domIndex

function domIndex(rootNode, tree, indices, nodes) {
    if (!indices || indices.length === 0) {
        return {}
    } else {
        indices.sort(ascending)
        return recurse(rootNode, tree, indices, nodes, 0)
    }
}

function recurse(rootNode, tree, indices, nodes, rootIndex) {
    nodes = nodes || {}


    if (rootNode) {
        if (indexInRange(indices, rootIndex, rootIndex)) {
            nodes[rootIndex] = rootNode
        }

        var vChildren = tree.children

        if (vChildren) {

            var childNodes = rootNode.childNodes

            for (var i = 0; i < tree.children.length; i++) {
                rootIndex += 1

                var vChild = vChildren[i] || noChild
                var nextIndex = rootIndex + (vChild.count || 0)

                // skip recursion down the tree if there are no nodes down here
                if (indexInRange(indices, rootIndex, nextIndex)) {
                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)
                }

                rootIndex = nextIndex
            }
        }
    }

    return nodes
}

// Binary search for an index in the interval [left, right]
function indexInRange(indices, left, right) {
    if (indices.length === 0) {
        return false
    }

    var minIndex = 0
    var maxIndex = indices.length - 1
    var currentIndex
    var currentItem

    while (minIndex <= maxIndex) {
        currentIndex = ((maxIndex + minIndex) / 2) >> 0
        currentItem = indices[currentIndex]

        if (minIndex === maxIndex) {
            return currentItem >= left && currentItem <= right
        } else if (currentItem < left) {
            minIndex = currentIndex + 1
        } else  if (currentItem > right) {
            maxIndex = currentIndex - 1
        } else {
            return true
        }
    }

    return false;
}

function ascending(a, b) {
    return a > b ? 1 : -1
}

},{}],12:[function(require,module,exports){
var applyProperties = require("./apply-properties")

var isWidget = require("../vnode/is-widget.js")
var VPatch = require("../vnode/vpatch.js")

var render = require("./create-element")
var updateWidget = require("./update-widget")

module.exports = applyPatch

function applyPatch(vpatch, domNode, renderOptions) {
    var type = vpatch.type
    var vNode = vpatch.vNode
    var patch = vpatch.patch

    switch (type) {
        case VPatch.REMOVE:
            return removeNode(domNode, vNode)
        case VPatch.INSERT:
            return insertNode(domNode, patch, renderOptions)
        case VPatch.VTEXT:
            return stringPatch(domNode, vNode, patch, renderOptions)
        case VPatch.WIDGET:
            return widgetPatch(domNode, vNode, patch, renderOptions)
        case VPatch.VNODE:
            return vNodePatch(domNode, vNode, patch, renderOptions)
        case VPatch.ORDER:
            reorderChildren(domNode, patch)
            return domNode
        case VPatch.PROPS:
            applyProperties(domNode, patch, vNode.properties)
            return domNode
        case VPatch.THUNK:
            return replaceRoot(domNode,
                renderOptions.patch(domNode, patch, renderOptions))
        default:
            return domNode
    }
}

function removeNode(domNode, vNode) {
    var parentNode = domNode.parentNode

    if (parentNode) {
        parentNode.removeChild(domNode)
    }

    destroyWidget(domNode, vNode);

    return null
}

function insertNode(parentNode, vNode, renderOptions) {
    var newNode = render(vNode, renderOptions)

    if (parentNode) {
        parentNode.appendChild(newNode)
    }

    return parentNode
}

function stringPatch(domNode, leftVNode, vText, renderOptions) {
    var newNode

    if (domNode.nodeType === 3) {
        domNode.replaceData(0, domNode.length, vText.text)
        newNode = domNode
    } else {
        var parentNode = domNode.parentNode
        newNode = render(vText, renderOptions)

        if (parentNode && newNode !== domNode) {
            parentNode.replaceChild(newNode, domNode)
        }
    }

    return newNode
}

function widgetPatch(domNode, leftVNode, widget, renderOptions) {
    var updating = updateWidget(leftVNode, widget)
    var newNode

    if (updating) {
        newNode = widget.update(leftVNode, domNode) || domNode
    } else {
        newNode = render(widget, renderOptions)
    }

    var parentNode = domNode.parentNode

    if (parentNode && newNode !== domNode) {
        parentNode.replaceChild(newNode, domNode)
    }

    if (!updating) {
        destroyWidget(domNode, leftVNode)
    }

    return newNode
}

function vNodePatch(domNode, leftVNode, vNode, renderOptions) {
    var parentNode = domNode.parentNode
    var newNode = render(vNode, renderOptions)

    if (parentNode && newNode !== domNode) {
        parentNode.replaceChild(newNode, domNode)
    }

    return newNode
}

function destroyWidget(domNode, w) {
    if (typeof w.destroy === "function" && isWidget(w)) {
        w.destroy(domNode)
    }
}

function reorderChildren(domNode, moves) {
    var childNodes = domNode.childNodes
    var keyMap = {}
    var node
    var remove
    var insert

    for (var i = 0; i < moves.removes.length; i++) {
        remove = moves.removes[i]
        node = childNodes[remove.from]
        if (remove.key) {
            keyMap[remove.key] = node
        }
        domNode.removeChild(node)
    }

    var length = childNodes.length
    for (var j = 0; j < moves.inserts.length; j++) {
        insert = moves.inserts[j]
        node = keyMap[insert.key]
        // this is the weirdest bug i've ever seen in webkit
        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])
    }
}

function replaceRoot(oldRoot, newRoot) {
    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {
        oldRoot.parentNode.replaceChild(newRoot, oldRoot)
    }

    return newRoot;
}

},{"../vnode/is-widget.js":20,"../vnode/vpatch.js":23,"./apply-properties":9,"./create-element":10,"./update-widget":14}],13:[function(require,module,exports){
var document = require("global/document")
var isArray = require("x-is-array")

var domIndex = require("./dom-index")
var patchOp = require("./patch-op")
module.exports = patch

function patch(rootNode, patches) {
    return patchRecursive(rootNode, patches)
}

function patchRecursive(rootNode, patches, renderOptions) {
    var indices = patchIndices(patches)

    if (indices.length === 0) {
        return rootNode
    }

    var index = domIndex(rootNode, patches.a, indices)
    var ownerDocument = rootNode.ownerDocument

    if (!renderOptions) {
        renderOptions = { patch: patchRecursive }
        if (ownerDocument !== document) {
            renderOptions.document = ownerDocument
        }
    }

    for (var i = 0; i < indices.length; i++) {
        var nodeIndex = indices[i]
        rootNode = applyPatch(rootNode,
            index[nodeIndex],
            patches[nodeIndex],
            renderOptions)
    }

    return rootNode
}

function applyPatch(rootNode, domNode, patchList, renderOptions) {
    if (!domNode) {
        return rootNode
    }

    var newNode

    if (isArray(patchList)) {
        for (var i = 0; i < patchList.length; i++) {
            newNode = patchOp(patchList[i], domNode, renderOptions)

            if (domNode === rootNode) {
                rootNode = newNode
            }
        }
    } else {
        newNode = patchOp(patchList, domNode, renderOptions)

        if (domNode === rootNode) {
            rootNode = newNode
        }
    }

    return rootNode
}

function patchIndices(patches) {
    var indices = []

    for (var key in patches) {
        if (key !== "a") {
            indices.push(Number(key))
        }
    }

    return indices
}

},{"./dom-index":11,"./patch-op":12,"global/document":5,"x-is-array":7}],14:[function(require,module,exports){
var isWidget = require("../vnode/is-widget.js")

module.exports = updateWidget

function updateWidget(a, b) {
    if (isWidget(a) && isWidget(b)) {
        if ("name" in a && "name" in b) {
            return a.id === b.id
        } else {
            return a.init === b.init
        }
    }

    return false
}

},{"../vnode/is-widget.js":20}],15:[function(require,module,exports){
var isVNode = require("./is-vnode")
var isVText = require("./is-vtext")
var isWidget = require("./is-widget")
var isThunk = require("./is-thunk")

module.exports = handleThunk

function handleThunk(a, b) {
    var renderedA = a
    var renderedB = b

    if (isThunk(b)) {
        renderedB = renderThunk(b, a)
    }

    if (isThunk(a)) {
        renderedA = renderThunk(a, null)
    }

    return {
        a: renderedA,
        b: renderedB
    }
}

function renderThunk(thunk, previous) {
    var renderedThunk = thunk.vnode

    if (!renderedThunk) {
        renderedThunk = thunk.vnode = thunk.render(previous)
    }

    if (!(isVNode(renderedThunk) ||
            isVText(renderedThunk) ||
            isWidget(renderedThunk))) {
        throw new Error("thunk did not return a valid node");
    }

    return renderedThunk
}

},{"./is-thunk":16,"./is-vnode":18,"./is-vtext":19,"./is-widget":20}],16:[function(require,module,exports){
module.exports = isThunk

function isThunk(t) {
    return t && t.type === "Thunk"
}

},{}],17:[function(require,module,exports){
module.exports = isHook

function isHook(hook) {
    return hook &&
      (typeof hook.hook === "function" && !hook.hasOwnProperty("hook") ||
       typeof hook.unhook === "function" && !hook.hasOwnProperty("unhook"))
}

},{}],18:[function(require,module,exports){
var version = require("./version")

module.exports = isVirtualNode

function isVirtualNode(x) {
    return x && x.type === "VirtualNode" && x.version === version
}

},{"./version":21}],19:[function(require,module,exports){
var version = require("./version")

module.exports = isVirtualText

function isVirtualText(x) {
    return x && x.type === "VirtualText" && x.version === version
}

},{"./version":21}],20:[function(require,module,exports){
module.exports = isWidget

function isWidget(w) {
    return w && w.type === "Widget"
}

},{}],21:[function(require,module,exports){
module.exports = "2"

},{}],22:[function(require,module,exports){
var version = require("./version")
var isVNode = require("./is-vnode")
var isWidget = require("./is-widget")
var isThunk = require("./is-thunk")
var isVHook = require("./is-vhook")

module.exports = VirtualNode

var noProperties = {}
var noChildren = []

function VirtualNode(tagName, properties, children, key, namespace) {
    this.tagName = tagName
    this.properties = properties || noProperties
    this.children = children || noChildren
    this.key = key != null ? String(key) : undefined
    this.namespace = (typeof namespace === "string") ? namespace : null

    var count = (children && children.length) || 0
    var descendants = 0
    var hasWidgets = false
    var hasThunks = false
    var descendantHooks = false
    var hooks

    for (var propName in properties) {
        if (properties.hasOwnProperty(propName)) {
            var property = properties[propName]
            if (isVHook(property) && property.unhook) {
                if (!hooks) {
                    hooks = {}
                }

                hooks[propName] = property
            }
        }
    }

    for (var i = 0; i < count; i++) {
        var child = children[i]
        if (isVNode(child)) {
            descendants += child.count || 0

            if (!hasWidgets && child.hasWidgets) {
                hasWidgets = true
            }

            if (!hasThunks && child.hasThunks) {
                hasThunks = true
            }

            if (!descendantHooks && (child.hooks || child.descendantHooks)) {
                descendantHooks = true
            }
        } else if (!hasWidgets && isWidget(child)) {
            if (typeof child.destroy === "function") {
                hasWidgets = true
            }
        } else if (!hasThunks && isThunk(child)) {
            hasThunks = true;
        }
    }

    this.count = count + descendants
    this.hasWidgets = hasWidgets
    this.hasThunks = hasThunks
    this.hooks = hooks
    this.descendantHooks = descendantHooks
}

VirtualNode.prototype.version = version
VirtualNode.prototype.type = "VirtualNode"

},{"./is-thunk":16,"./is-vhook":17,"./is-vnode":18,"./is-widget":20,"./version":21}],23:[function(require,module,exports){
var version = require("./version")

VirtualPatch.NONE = 0
VirtualPatch.VTEXT = 1
VirtualPatch.VNODE = 2
VirtualPatch.WIDGET = 3
VirtualPatch.PROPS = 4
VirtualPatch.ORDER = 5
VirtualPatch.INSERT = 6
VirtualPatch.REMOVE = 7
VirtualPatch.THUNK = 8

module.exports = VirtualPatch

function VirtualPatch(type, vNode, patch) {
    this.type = Number(type)
    this.vNode = vNode
    this.patch = patch
}

VirtualPatch.prototype.version = version
VirtualPatch.prototype.type = "VirtualPatch"

},{"./version":21}],24:[function(require,module,exports){
var version = require("./version")

module.exports = VirtualText

function VirtualText(text) {
    this.text = String(text)
}

VirtualText.prototype.version = version
VirtualText.prototype.type = "VirtualText"

},{"./version":21}],25:[function(require,module,exports){
var isObject = require("is-object")
var isHook = require("../vnode/is-vhook")

module.exports = diffProps

function diffProps(a, b) {
    var diff

    for (var aKey in a) {
        if (!(aKey in b)) {
            diff = diff || {}
            diff[aKey] = undefined
        }

        var aValue = a[aKey]
        var bValue = b[aKey]

        if (aValue === bValue) {
            continue
        } else if (isObject(aValue) && isObject(bValue)) {
            if (getPrototype(bValue) !== getPrototype(aValue)) {
                diff = diff || {}
                diff[aKey] = bValue
            } else if (isHook(bValue)) {
                 diff = diff || {}
                 diff[aKey] = bValue
            } else {
                var objectDiff = diffProps(aValue, bValue)
                if (objectDiff) {
                    diff = diff || {}
                    diff[aKey] = objectDiff
                }
            }
        } else {
            diff = diff || {}
            diff[aKey] = bValue
        }
    }

    for (var bKey in b) {
        if (!(bKey in a)) {
            diff = diff || {}
            diff[bKey] = b[bKey]
        }
    }

    return diff
}

function getPrototype(value) {
  if (Object.getPrototypeOf) {
    return Object.getPrototypeOf(value)
  } else if (value.__proto__) {
    return value.__proto__
  } else if (value.constructor) {
    return value.constructor.prototype
  }
}

},{"../vnode/is-vhook":17,"is-object":6}],26:[function(require,module,exports){
var isArray = require("x-is-array")

var VPatch = require("../vnode/vpatch")
var isVNode = require("../vnode/is-vnode")
var isVText = require("../vnode/is-vtext")
var isWidget = require("../vnode/is-widget")
var isThunk = require("../vnode/is-thunk")
var handleThunk = require("../vnode/handle-thunk")

var diffProps = require("./diff-props")

module.exports = diff

function diff(a, b) {
    var patch = { a: a }
    walk(a, b, patch, 0)
    return patch
}

function walk(a, b, patch, index) {
    if (a === b) {
        return
    }

    var apply = patch[index]
    var applyClear = false

    if (isThunk(a) || isThunk(b)) {
        thunks(a, b, patch, index)
    } else if (b == null) {

        // If a is a widget we will add a remove patch for it
        // Otherwise any child widgets/hooks must be destroyed.
        // This prevents adding two remove patches for a widget.
        if (!isWidget(a)) {
            clearState(a, patch, index)
            apply = patch[index]
        }

        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))
    } else if (isVNode(b)) {
        if (isVNode(a)) {
            if (a.tagName === b.tagName &&
                a.namespace === b.namespace &&
                a.key === b.key) {
                var propsPatch = diffProps(a.properties, b.properties)
                if (propsPatch) {
                    apply = appendPatch(apply,
                        new VPatch(VPatch.PROPS, a, propsPatch))
                }
                apply = diffChildren(a, b, patch, apply, index)
            } else {
                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
                applyClear = true
            }
        } else {
            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
            applyClear = true
        }
    } else if (isVText(b)) {
        if (!isVText(a)) {
            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
            applyClear = true
        } else if (a.text !== b.text) {
            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
        }
    } else if (isWidget(b)) {
        if (!isWidget(a)) {
            applyClear = true
        }

        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))
    }

    if (apply) {
        patch[index] = apply
    }

    if (applyClear) {
        clearState(a, patch, index)
    }
}

function diffChildren(a, b, patch, apply, index) {
    var aChildren = a.children
    var orderedSet = reorder(aChildren, b.children)
    var bChildren = orderedSet.children

    var aLen = aChildren.length
    var bLen = bChildren.length
    var len = aLen > bLen ? aLen : bLen

    for (var i = 0; i < len; i++) {
        var leftNode = aChildren[i]
        var rightNode = bChildren[i]
        index += 1

        if (!leftNode) {
            if (rightNode) {
                // Excess nodes in b need to be added
                apply = appendPatch(apply,
                    new VPatch(VPatch.INSERT, null, rightNode))
            }
        } else {
            walk(leftNode, rightNode, patch, index)
        }

        if (isVNode(leftNode) && leftNode.count) {
            index += leftNode.count
        }
    }

    if (orderedSet.moves) {
        // Reorder nodes last
        apply = appendPatch(apply, new VPatch(
            VPatch.ORDER,
            a,
            orderedSet.moves
        ))
    }

    return apply
}

function clearState(vNode, patch, index) {
    // TODO: Make this a single walk, not two
    unhook(vNode, patch, index)
    destroyWidgets(vNode, patch, index)
}

// Patch records for all destroyed widgets must be added because we need
// a DOM node reference for the destroy function
function destroyWidgets(vNode, patch, index) {
    if (isWidget(vNode)) {
        if (typeof vNode.destroy === "function") {
            patch[index] = appendPatch(
                patch[index],
                new VPatch(VPatch.REMOVE, vNode, null)
            )
        }
    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {
        var children = vNode.children
        var len = children.length
        for (var i = 0; i < len; i++) {
            var child = children[i]
            index += 1

            destroyWidgets(child, patch, index)

            if (isVNode(child) && child.count) {
                index += child.count
            }
        }
    } else if (isThunk(vNode)) {
        thunks(vNode, null, patch, index)
    }
}

// Create a sub-patch for thunks
function thunks(a, b, patch, index) {
    var nodes = handleThunk(a, b)
    var thunkPatch = diff(nodes.a, nodes.b)
    if (hasPatches(thunkPatch)) {
        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)
    }
}

function hasPatches(patch) {
    for (var index in patch) {
        if (index !== "a") {
            return true
        }
    }

    return false
}

// Execute hooks when two nodes are identical
function unhook(vNode, patch, index) {
    if (isVNode(vNode)) {
        if (vNode.hooks) {
            patch[index] = appendPatch(
                patch[index],
                new VPatch(
                    VPatch.PROPS,
                    vNode,
                    undefinedKeys(vNode.hooks)
                )
            )
        }

        if (vNode.descendantHooks || vNode.hasThunks) {
            var children = vNode.children
            var len = children.length
            for (var i = 0; i < len; i++) {
                var child = children[i]
                index += 1

                unhook(child, patch, index)

                if (isVNode(child) && child.count) {
                    index += child.count
                }
            }
        }
    } else if (isThunk(vNode)) {
        thunks(vNode, null, patch, index)
    }
}

function undefinedKeys(obj) {
    var result = {}

    for (var key in obj) {
        result[key] = undefined
    }

    return result
}

// List diff, naive left to right reordering
function reorder(aChildren, bChildren) {
    // O(M) time, O(M) memory
    var bChildIndex = keyIndex(bChildren)
    var bKeys = bChildIndex.keys
    var bFree = bChildIndex.free

    if (bFree.length === bChildren.length) {
        return {
            children: bChildren,
            moves: null
        }
    }

    // O(N) time, O(N) memory
    var aChildIndex = keyIndex(aChildren)
    var aKeys = aChildIndex.keys
    var aFree = aChildIndex.free

    if (aFree.length === aChildren.length) {
        return {
            children: bChildren,
            moves: null
        }
    }

    // O(MAX(N, M)) memory
    var newChildren = []

    var freeIndex = 0
    var freeCount = bFree.length
    var deletedItems = 0

    // Iterate through a and match a node in b
    // O(N) time,
    for (var i = 0 ; i < aChildren.length; i++) {
        var aItem = aChildren[i]
        var itemIndex

        if (aItem.key) {
            if (bKeys.hasOwnProperty(aItem.key)) {
                // Match up the old keys
                itemIndex = bKeys[aItem.key]
                newChildren.push(bChildren[itemIndex])

            } else {
                // Remove old keyed items
                itemIndex = i - deletedItems++
                newChildren.push(null)
            }
        } else {
            // Match the item in a with the next free item in b
            if (freeIndex < freeCount) {
                itemIndex = bFree[freeIndex++]
                newChildren.push(bChildren[itemIndex])
            } else {
                // There are no free items in b to match with
                // the free items in a, so the extra free nodes
                // are deleted.
                itemIndex = i - deletedItems++
                newChildren.push(null)
            }
        }
    }

    var lastFreeIndex = freeIndex >= bFree.length ?
        bChildren.length :
        bFree[freeIndex]

    // Iterate through b and append any new keys
    // O(M) time
    for (var j = 0; j < bChildren.length; j++) {
        var newItem = bChildren[j]

        if (newItem.key) {
            if (!aKeys.hasOwnProperty(newItem.key)) {
                // Add any new keyed items
                // We are adding new items to the end and then sorting them
                // in place. In future we should insert new items in place.
                newChildren.push(newItem)
            }
        } else if (j >= lastFreeIndex) {
            // Add any leftover non-keyed items
            newChildren.push(newItem)
        }
    }

    var simulate = newChildren.slice()
    var simulateIndex = 0
    var removes = []
    var inserts = []
    var simulateItem

    for (var k = 0; k < bChildren.length;) {
        var wantedItem = bChildren[k]
        simulateItem = simulate[simulateIndex]

        // remove items
        while (simulateItem === null && simulate.length) {
            removes.push(remove(simulate, simulateIndex, null))
            simulateItem = simulate[simulateIndex]
        }

        if (!simulateItem || simulateItem.key !== wantedItem.key) {
            // if we need a key in this position...
            if (wantedItem.key) {
                if (simulateItem && simulateItem.key) {
                    // if an insert doesn't put this key in place, it needs to move
                    if (bKeys[simulateItem.key] !== k + 1) {
                        removes.push(remove(simulate, simulateIndex, simulateItem.key))
                        simulateItem = simulate[simulateIndex]
                        // if the remove didn't put the wanted item in place, we need to insert it
                        if (!simulateItem || simulateItem.key !== wantedItem.key) {
                            inserts.push({key: wantedItem.key, to: k})
                        }
                        // items are matching, so skip ahead
                        else {
                            simulateIndex++
                        }
                    }
                    else {
                        inserts.push({key: wantedItem.key, to: k})
                    }
                }
                else {
                    inserts.push({key: wantedItem.key, to: k})
                }
                k++
            }
            // a key in simulate has no matching wanted key, remove it
            else if (simulateItem && simulateItem.key) {
                removes.push(remove(simulate, simulateIndex, simulateItem.key))
            }
        }
        else {
            simulateIndex++
            k++
        }
    }

    // remove all the remaining nodes from simulate
    while(simulateIndex < simulate.length) {
        simulateItem = simulate[simulateIndex]
        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))
    }

    // If the only moves we have are deletes then we can just
    // let the delete patch remove these items.
    if (removes.length === deletedItems && !inserts.length) {
        return {
            children: newChildren,
            moves: null
        }
    }

    return {
        children: newChildren,
        moves: {
            removes: removes,
            inserts: inserts
        }
    }
}

function remove(arr, index, key) {
    arr.splice(index, 1)

    return {
        from: index,
        key: key
    }
}

function keyIndex(children) {
    var keys = {}
    var free = []
    var length = children.length

    for (var i = 0; i < length; i++) {
        var child = children[i]

        if (child.key) {
            keys[child.key] = i
        } else {
            free.push(i)
        }
    }

    return {
        keys: keys,     // A hash of key name to index
        free: free,     // An array of unkeyed item indices
    }
}

function appendPatch(apply, patch) {
    if (apply) {
        if (isArray(apply)) {
            apply.push(patch)
        } else {
            apply = [apply, patch]
        }

        return apply
    } else {
        return patch
    }
}

},{"../vnode/handle-thunk":15,"../vnode/is-thunk":16,"../vnode/is-vnode":18,"../vnode/is-vtext":19,"../vnode/is-widget":20,"../vnode/vpatch":23,"./diff-props":25,"x-is-array":7}]},{},[1]);
